[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/1.html_css.md" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/1.html_css.md"[m
[1mdeleted file mode 100644[m
[1mindex e334f24..0000000[m
[1m--- "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/1.html_css.md"[m
[1m+++ /dev/null[m
[36m@@ -1,1087 +0,0 @@[m
[31m-⭐          表示我没被问过，但是是重要的知识点[m
[31m-[m
[31m-⭐⭐     表示我被问过的题[m
[31m-[m
[31m-⭐⭐⭐表示我经常被问到的题[m
[31m-[m
[31m-***[m
[31m-[m
[31m-## 1.行内元素/块级元素 非替换元素/替换元素(⭐⭐⭐)[m
[31m-[m
[31m-- 块级元素[m
[31m-  -  默认独自占据一行，左右两边都没有元素；[m
[31m-  -  可以设置宽高,padding,margin等值，在不设置宽度的情况下，默认为父元素的宽度一致。[m
[31m-  - 常见的块级元素：常见块元素：p，div，ol，ul，h1-h6，table，form。[m
[31m-- 行内元素[m
[31m-  - 不会独占一行，相邻的行内元素会排列在同一行里，直到一行排不下去才会换行[m
[31m-  - 其宽度随着元素的内容而变化，行内元素设置width，height无效，(可以设置line-height指定高度，宽度随内容变化)[m
[31m-  - margin 水平方向有效，垂直方向无效。[m
[31m-  - padding 水平方向有效，垂直方向有特殊效果（不是边距效果），具体表现：不影响位置，影响视觉。[m
[31m-  - 常见的行内元素：span , a ,strong ,b ,em , i , big ,small ,label 等等。[m
[31m-- 内联块元素[m
[31m-  - 既有行内元素的一些特性又有块级元素的一些特性,它像内联元素，但具有宽度和高度。[m
[31m-  - 和其他元素都在一行上；[m
[31m-  - 元素的高度、宽度、行高以及顶和底边距都可设置[m
[31m-  - 元素排在一行，会有空白缝隙[m
[31m-  - 可以设置width,height，margin,padding等属性[m
[31m-  - 常用的内联块状[m
[31m-[m
[31m-![1603951625323](assets/1603951625323.png)[m
[31m-[m
[31m-- 替换元素[m
[31m-[m
[31m-  -  替换元素是浏览器根据元素的标签和属性，来决定元素的具体显示内容。[m
[31m-[m
[31m-    介绍：img标签，只写这一个标签，不添加属性，页面上是显示不出来你要的图片的，但是我们往img标签里面添加src，这时候页面上就能显示出你要的图片，src不同，页面上显示出来的内容也就不同。[m
[31m-[m
[31m-    同样为替换元素的还有<input>标签，<textarea>标签等等[m
[31m-[m
[31m-  -  **替换元素都是行内块元素**[m
[31m-[m
[31m-- 非替换元素[m
[31m-[m
[31m-  -  HTML 的大多数元素是不可替换元素，他们将内容直接告诉浏览器，将其显示出来。[m
[31m-[m
[31m-- Q&A:[m
[31m-[m
[31m-  - 为什么行内元素padding有效；margin水平方向有效，竖直方向无效？[m
[31m-[m
[31m-    虽然内联元素可以增加内边距，使其看上去好像将自己所占的地方扩大了，但是它的本质还是内联元素，它不能独占一行，第二行的元素不会在意padding的影响，所以两者会合在一起。所以垂直方向上的padding虽然可以添加，但是并不占据空间[m
[31m-[m
[31m-[m
[31m-## 2.img的title和alt属性(⭐⭐)[m
[31m-[m
[31m-- title属性[m
[31m-[m
[31m-  - title是鼠标划上去显示的内容[m
[31m-  - title是全局属性[m
[31m-[m
[31m-- alt属性[m
[31m-[m
[31m-  - alt是在图片不能正常加载的时候会显示提示语[m
[31m-  - 在IE6以下的浏览器，如果一个图片没有title属性，有alt属性，鼠标放在图片上也会有title属性那样的效果(都有提示信息)[m
[31m-[m
[31m-- 全局属性(扩展了解)[m
[31m-[m
[31m-  - 全局属性可用于任何一个html元素[m
[31m-[m
[31m-  - 常见的全局属性[m
[31m-[m
[31m-    ![1603952302420](assets/1603952302420.png)[m
[31m-[m
[31m-## 3.meta标签(⭐⭐)[m
[31m-[m
[31m-- meta标签的作用[m
[31m-[m
[31m-  - meta标签是一种功能性标签，用来添加一些辅助信息[m
[31m-  - 标签提供关于 HTML 文档的元数据。元数据不会显示在页面上，但是对于机器是可读的[m
[31m-  - 当有`http-equiv`和`name`属性时，一定要有`content`属性对其进行说明[m
[31m-[m
[31m-- 常见的meta标签[m
[31m-[m
[31m-  - charset[m
[31m-[m
[31m-    声明文档使用的字符编码，解决乱码问题主要用的就是它，值得一提的是，这个**charset一定要写第一行**，不然就可能会产生乱码了。[m
[31m-[m
[31m-  - name[m
[31m-[m
[31m-    这个属性是供浏览器进行解析，对于一些浏览器兼容性问题，name属性是最常用的[m
[31m-[m
[31m-  - http-equiv[m
[31m-[m
[31m-    添加http头部内容，对一些自定义的，或者需要额外添加的http头部内容，需要发送到浏览器中，我们就可以是使用这个属性。[m
[31m-[m
[31m-## 4.DOCTYPE标签(⭐⭐⭐)[m
[31m-[m
[31m-- "<!DOCTYPE>"声明位于文档中的最前面的位置，是一个单标签，此标签可告知浏览器文档使用哪种 HTML 或 XHTML 规范。[m
[31m-- DOCTYPE不存在或格式不正确会导致文档以兼容模式呈现。[m
[31m-- 标准模式 兼容模式[m
[31m-  - **标准模式**的排版 和 JS运作模式都是以该浏览器支持的最高标准运行。在**兼容模式**中，页面以宽松的向后兼容的方式显示,模拟老式浏览器的行为以防止站点无法工作。[m
[31m-  - 具体区别[m
[31m-    - 盒模型[m
[31m-        在标准模式中 ：width是内容宽度 ，元素真正的宽度 = width;[m
[31m-        在兼容模式中 ：width则是=width+padding+border[m
[31m-    - 在标准模式下，给span等行内元素设置wdith和height都不会生效，而在兼容模式下，则会生效。[m
[31m-    - 在标准模式下，一个元素的高度是由其包含的内容来决定的，如果父元素没有设置高度，子元素设置一个百分比的高度是无效的。[m
[31m-    - 使用margin:0 auto在standards模式下可以使元素水平居中，但在兼容模式下却会失效（用text-align属性解决）[m
[31m-    - 兼容模式下table中的字体属性不能继承上层的设置，white-space:pre会失效，设置图片的padding会失效[m
[31m-[m
[31m-## 5.script标签的defer和async(⭐)[m
[31m-[m
[31m-- defer(推迟)[m
[31m-  - 这个属性的用途是表明脚本在执行时不会影响页面的构造。也就是说，脚本会被延迟到整个页面都解析完毕后再运行。因此，在元素中设置属性，相当于告诉浏览器立即下载，但延迟执行。[m
[31m-  - HTML5规范要求脚本按照它们出现的先后顺序执行，因此第一个延迟脚本会先于第二个延迟脚本执行，而这两个脚本会先于DOMContentLoaded事件执行。在现实当中，延迟脚本并不一定会按照顺序执行，也不一定会在DOMContentLoad时间触发前执行，因此最好只包含一个延迟脚本。[m
[31m-- async(异步属性)[m
[31m-  - 这个属性与defer类似，都用于改变处理脚本的行为。同样与defer类似，async只适用于外部脚本文件，并告诉浏览器立即下载文件。但与defer不同的是，标记为async的脚本并不保证按照它们的先后顺序执行。[m
[31m-  - 第二个脚本文件可能会在第一个脚本文件之前执行。因此确保两者之间互不依赖非常重要。指定async属性的目的是不让页面等待两个脚本下载和执行，从而异步加载页面其他内容。[m
[31m-  - 概括来讲，就是这两个属性都会使script标签异步加载，然而执行的时机是不一样的。async是乱序的，而defer是顺序执行。[m
[31m-[m
[31m-## 6.W3C盒模型和怪异盒模型(⭐⭐⭐)[m
[31m-[m
[31m-- 标准盒模型[m
[31m-[m
[31m-  ![1603954353208](assets/1603954353208.png)[m
[31m-[m
[31m-- 怪异和模型[m
[31m-[m
[31m-  ![1603954430118](assets/1603954430118.png)[m
[31m-[m
[31m-- box-sizing语法：[m
[31m-  box-sizing: content-box || border-box || inherit || initial[m
[31m-[m
[31m-  当设置为box-sizing:content-box时，将采用标准模式解析计算，也是默认模式；[m
[31m-  当设置为box-sizing:border-box时，将采用怪异模式解析计算；[m
[31m-[m
[31m-## 7.居中的方法(⭐⭐⭐)[m
[31m-[m
[31m-### 1.只水平居中的方法[m
[31m-[m
[31m-- **margin: 0 auto;text-align: center**[m
[31m-[m
[31m-  ![1603955233918](assets/1603955233918.png)[m
[31m-[m
[31m-- **display:flex:** 父元素display:flex;flex-direction:column;而子元素align-self:center;[m
[31m-[m
[31m-  ![1603955248344](assets/1603955248344.png)[m
[31m-[m
[31m-- **通过display:table-cell和margin-left实现CSS水平居中**[m
[31m-[m
[31m-  对于父元素和子元素的宽度都确定的情况，适合通过display:table-cell和margin-left实现CSS水平居中。[m
[31m-[m
[31m-  使用时，父元素display:table-cell，子元素给剩余宽度一半的margin-left。[m
[31m-[m
[31m-  ![1603955269637](assets/1603955269637.png)[m
[31m-[m
[31m-- **通过position:absolute实现CSS水平居中**[m
[31m-[m
[31m-  这种方法跟上一个方法适用场景一样，也是适用于父元素和子元素的宽度都确定的情况。[m
[31m-[m
[31m-  使用时，父元素position:absolute，子元素给剩余宽度一半的margin-left。[m
[31m-[m
[31m-  ![1603955278377](assets/1603955278377.png)[m
[31m-[m
[31m-- **通过width:fit-content实现CSS水平居中(添加给子元素)**[m
[31m-[m
[31m-  这种方法可以确保子元素宽度不确定的情况下，也能实现CSS水平居中。[m
[31m-[m
[31m-  需要注意的是，需要配合“margin: 0 auto; text-align: center”使用[m
[31m-[m
[31m-  ![1603955290712](assets/1603955290712.png)[m
[31m-[m
[31m-- **通过display:inline-block和text-align:center实现CSS水平居中**[m
[31m-[m
[31m-  (父)display:inline-block能改父元素内的子元素的表达样式，(子)同样需要配合“margin: 0 auto; text-align: center”使用。[m
[31m-[m
[31m-  ![1603955304104](assets/1603955304104.png)[m
[31m-[m
[31m-- **通过position:relative、float:left和margin-left实现CSS水平居中**[m
[31m-[m
[31m-  给父元素样式position:relative，给子元素float:left和margin-left就可以实现CSS水平居中。[m
[31m-[m
[31m-  ![1603955315157](assets/1603955315157.png)[m
[31m-[m
[31m-- **通过隐藏节点+float的方法实现CSS水平居中**[m
[31m-[m
[31m-  我们可以通过增加一个隐藏节点，然后使其float:left，这样子元素就会被隐藏节点推着水平居中。[m
[31m-[m
[31m-  这种增加隐藏节点方法也适用于CSS垂直居中，原理一样，但是不用float。[m
[31m-[m
[31m-  ![1603955337860](assets/1603955337860.png)[m
[31m-[m
[31m-- **通过transform实现CSS水平居中**[m
[31m-[m
[31m-  这种方法是最不推荐的方法，因为transform属性在各个浏览器中的表现行为不一致，所以会出现一些兼容性的问题，只有当已知用户浏览器时才推荐使用。[m
[31m-[m
[31m-  ![1603955354747](assets/1603955354747.png)[m
[31m-[m
[31m-### 2.只垂直居中的方法[m
[31m-[m
[31m-- **通过verticle-align:middle实现CSS垂直居中**[m
[31m-[m
[31m-  通过vertical-align:middle实现CSS垂直居中是最常使用的方法，但是有一点需要格外注意，vertical生效的前提是元素的display：inline-block。[m
[31m-[m
[31m-  ![1603955430060](assets/1603955430060.png)[m
[31m-[m
[31m-- **通过display:flex实现CSS垂直居中**[m
[31m-[m
[31m-  给父元素display:flex;而子元素align-self:center[m
[31m-[m
[31m-  ![1603955487208](assets/1603955487208.png)[m
[31m-[m
[31m-- **通过伪元素:before实现CSS垂直居中**[m
[31m-[m
[31m-  具体方式是为父元素添加伪元素:before，使得子元素实现垂直居中。[m
[31m-[m
[31m-  ![1603955512805](assets/1603955512805.png)[m
[31m-[m
[31m-- **通过display:table-cell实现CSS垂直居中**[m
[31m-[m
[31m-  给父元素display:table，子元素display：table-cell的方式实现CSS垂直居中。[m
[31m-[m
[31m-  ![1603955548875](assets/1603955548875.png)[m
[31m-[m
[31m-- **通过隐藏节点实现CSS垂直居中**[m
[31m-[m
[31m-  创建一个隐藏节点#hide，使得隐藏节点的height值为剩余高度的一半即可。[m
[31m-[m
[31m-  这种方法也适用于CSS水平居中，原理一样。[m
[31m-[m
[31m-  ![1603955580925](assets/1603955580925.png)[m
[31m-[m
[31m-- **已知父元素高度通过transform实现CSS垂直居中**[m
[31m-[m
[31m-  给子元素的position:relative，再通过translateY即可定位到垂直居中的位置。[m
[31m-[m
[31m-  ![1603955606908](assets/1603955606908.png)[m
[31m-[m
[31m-- **未知父元素高度通过transform实现CSS垂直居中**[m
[31m-[m
[31m-  先给父元素position:relative，再给子元素position:absolute，通过translateY即可定位到垂直居中的位置。[m
[31m-[m
[31m-  ![1603955631107](assets/1603955631107.png)[m
[31m-[m
[31m-- **通过line-height实现CSS垂直居中**[m
[31m-[m
[31m-  设置子元素的line-height值等于父元素的height，这种方法适用于子元素为单行文本的情况。[m
[31m-[m
[31m-  ![1603955660197](assets/1603955660197.png)[m
[31m-[m
[31m-## 8.BFC(⭐⭐⭐)[m
[31m-[m
[31m-- BFC是什么[m
[31m-[m
[31m-  BFC即Block Formatting Contexts(块级格式化上下文)。具有BFC特性的元素可以看作是隔离了的独立容器，容器里面的元素不会在布局上影响到外面的元素，并且BFC具有普通元素所没有的一些特性。[m
[31m-[m
[31m-- 触发条件[m
[31m-[m
[31m-  - 浮动元素：float除none以外的值[m
[31m-  - 绝对定位元素：position（absolute、fixed）[m
[31m-  - display 为 inline-block、table-cells、flex[m
[31m-  - overflow除了visible以外的值（hidden、auto、scroll）[m
[31m-[m
[31m-- 特性及作用[m
[31m-[m
[31m-  - 解决margin叠加问题[m
[31m-  - 解决margin传递问题[m
[31m-  - 解决浮动问题[m
[31m-  - 解决覆盖问题[m
[31m-[m
[31m-## 9.清除浮动的方法(⭐⭐⭐)[m
[31m-[m
[31m-- **额外标签法**：给谁清除浮动，就在其后额外添加一个空白标签 。[m
[31m-[m
[31m-  - 优点：通俗易懂，书写方便。（不推荐使用）[m
[31m-    缺点：添加许多无意义的标签，结构化比较差。[m
[31m-[m
[31m-- **父级添加overflow方法**：可以通过触发BFC的方式，实现清楚浮动效果。[m
[31m-[m
[31m-  - 优点：代码简洁（慎重使用，若该父盒子里还有position定位会引起麻烦）[m
[31m-  - 缺点：内容增多时候容易造成不会自动换行导致内容被隐藏掉，无法显示需要溢出的元素。[m
[31m-[m
[31m-  ​       **注意：别加错位置，是给父亲加（并不是所有的浮动都需要清除，谁影响布局，才清除谁。）**[m
[31m-[m
[31m-- **使用after伪元素清除浮动**：：after方式为空元素的升级版，好处是不用单独加标签了。（较常用）[m
[31m-[m
[31m-  - 优点：符合闭合浮动思想，结构语义化正确[m
[31m-[m
[31m-  - 缺点：由于IE6-7不支持：after，使用zoom：1，触发hasLayout[m
[31m-[m
[31m-    ![1603956168876](assets/1603956168876.png)[m
[31m-[m
[31m-- **使用before和after双伪元素清除浮动**：（较常用）[m
[31m-[m
[31m-  ![1603956197334](assets/1603956197334.png)[m
[31m-[m
[31m-  **注意：是给父亲添加clearfix**[m
[31m-[m
[31m-## 10.position属性(⭐⭐⭐)[m
[31m-[m
[31m-- position: static[m
[31m-[m
[31m-　　static(没有定位)是position的默认值，元素处于正常的文档流中，会忽略left、top、right、bottom和z-index属性。[m
[31m-[m
[31m-- position: relative[m
[31m-[m
[31m-　　relative(相对定位)是指给元素设置相对于原本位置的定位，元素并不脱离文档流，因此元素原本的位置会被保留，其他的元素位置不会受到影响。[m
[31m-[m
[31m-- position: absolute[m
[31m-[m
[31m-　　absolute(绝对定位)是指给元素设置绝对的定位，相对定位的对象可以分为两种情况：[m
[31m-[m
[31m-　　1) 设置了absolute的元素如果存在有祖先元素设置了position属性为relative或者absolute，则这时元素的定位对象为此已设置position属性的祖先元素。[m
[31m-[m
[31m-　　2) 如果并没有设置了position属性的祖先元素，则此时相对于body进行定位。[m
[31m-[m
[31m-- position: fixed[m
[31m-[m
[31m-　　可以简单说fixed是特殊版的absolute，fixed元素总是相对于body定位的。[m
[31m-[m
[31m-- inherit[m
[31m-[m
[31m-　　继承父元素的position属性，但需要注意的是**IE8以及往前的版本都不支持inherit属性**。[m
[31m-[m
[31m-- sticky[m
[31m-[m
[31m-  　　position属性中最有意思的就是sticky了，设置了sticky的元素，在屏幕范围（viewport）时该元素的位置并不受到定位影响（设置是top、left等属性无效），当该元素的位置将要移出偏移范围时，定位又会变成fixed，根据设置的left、top等属性成固定位置的效果。[m
[31m-[m
[31m-  **可以知道sticky属性有以下几个特点：**[m
[31m-[m
[31m-  - 该元素并不脱离文档流，仍然保留元素原本在文档流中的位置。[m
[31m-  - 当元素在容器中被滚动超过指定的偏移值时，元素在容器内固定在指定位置。亦即如果你设置了top: 50px，那么在sticky元素到达距离相对定位的元素顶部50px的位置时固定，不再向上移动。[m
[31m-  - 元素固定的相对偏移是相对于离它最近的具有滚动框的祖先元素，如果祖先元素都不可以滚动，那么是相对于viewport来计算元素的偏移量[m
[31m-[m
[31m-  　　比较蛋疼的是这个属性的兼容性还不是很好，目前仍是一个试验性的属性，并不是W3C推荐的标准。它之所以会出现，也是因为监听`scroll`事件来实现粘性布局使浏览器进入慢滚动的模式，这与浏览器想要通过硬件加速来提升滚动的体验是相悖的。[m
[31m-[m
[31m-  简单的说，要让sticky属性生效的条件有以下两点：[m
[31m-[m
[31m-  - 一个是元素自身在文档流中的位置[m
[31m-  - 另一个是该元素的父容器的边缘[m
[31m-[m
[31m-  　　第一点上面已经讲过了，如果设置了top: 50px，那么元素在达到距离顶部50px时才会发生定位，否则并不会发生定位。[m
[31m-[m
[31m-  　　第二点则需要考虑父容器的高度情况：sticky元素在到达父容器的底部时，则不会再发生定位，如果父容器高度并没有比sticky元素高，那么sticky元素一开始就达到了底部，并不会有定位的效果。[m
[31m-[m
[31m-  　　此外还有一点就是父元素的overflow属性，如果父元素的overflow属性并不是默认的visible属性，那么sticky元素则相对于该父元素定位。也就是如果要定位在顶部的话，此时这个效果就无效了。。。[m
[31m-[m
[31m-## 11.CSS隐藏元素的方式(⭐⭐⭐)[m
[31m-[m
[31m-- display:none[m
[31m-[m
[31m-- visibility:hidden[m
[31m-[m
[31m-- opacity:0[m
[31m-[m
[31m-- position:absolute[m
[31m-[m
[31m-  ```css[m
[31m-  hide {[m
[31m-     position: absolute;[m
[31m-     top: -9999px;[m
[31m-     left: -9999px;[m
[31m-  }[m
[31m-  ```[m
[31m-[m
[31m-- clip-path[m
[31m-[m
[31m-  ```css[m
[31m-  hide {[m
[31m-    clip-path: polygon(0px 0px,0px 0px,0px 0px,0px 0px);[m
[31m-  }[m
[31m-  ```[m
[31m-[m
[31m-**举例：display:none和visibility:hidden的区别**[m
[31m-[m
[31m-- 将元素设置为display:none后，元素在页面上将彻底消失，元素本来占有的空间就会被其他元素占有，也就是说它会导致浏览器的重排和重绘。[m
[31m-[m
[31m-- 设置元素的visibility为hidden也是一种常用的隐藏元素的方法，和display:none的区别在于，元素在页面消失后，其占据的空间依旧会保留着，所以它只会导致浏览器重绘而不会重排。[m
[31m-[m
[31m-  visibility:hidden适用于那些元素隐藏后不希望页面布局会发生变化的场景[m
[31m-[m
[31m-## 12.Flex布局(⭐⭐⭐)[m
[31m-[m
[31m-- Flex容器和项目的常见属性[m
[31m-[m
[31m-   flex布局元素称为Flex容器(flex container),简称容器。他的所有子元素自动称为容器成员,称为Flex项目(flex item),简称项目。[m
[31m-[m
[31m-- 常用属性：[m
[31m-[m
[31m-   ```[m
[31m-   flex-direction（规定主轴方向。默认row）[m
[31m-   flex-wrap（项目在容器轴线排不下是否换行。 默认nowrap）[m
[31m-   flex-flow（是前两个属性的缩写。 默认值未row nowrap）[m
[31m-   [m
[31m-   justify-content（项目在容器主轴上对齐方式。默认flex-start）[m
[31m-   align-items（项目在侧轴上如何对齐。默认flex-start）[m
[31m-   align-content（多根轴线的对齐方式。默认flex-start）[m
[31m-   ```[m
[31m-[m
[31m-   - flex-direction属性[m
[31m-[m
[31m-     flex-direction属性决定主轴的方向（即项目的排列方向）[m
[31m-[m
[31m-     ```[m
[31m-     row(默认值): 主轴水平方向,起点为左端。[m
[31m-     row-reverse: 主轴水平方向,起点为右端。[m
[31m-     column: 主轴垂直方向,起点为上方。[m
[31m-     column-reverse: 主轴垂直方向,起点为下方。[m
[31m-     ```[m
[31m-[m
[31m-   - flex-wrap属性[m
[31m-[m
[31m-     默认情况下，项目都排在一条线（又称"轴线"）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。[m
[31m-[m
[31m-     ```[m
[31m-     nowrap(默认值): 不换行。[m
[31m-     wrap: 换行,第一行在上方。[m
[31m-     wrap-reverse: 换行,第一行在下方。[m
[31m-     ```[m
[31m-[m
[31m-   - flex-flow属性[m
[31m-[m
[31m-     flex-flow属性是**flex-direction**属性和**flex-wrap**属性的简写形式，默认值为**row nowrap**[m
[31m-[m
[31m-     ```css[m
[31m-     flex-flow: <flex-direction> || <flex-wrap>;[m
[31m-     ```[m
[31m-[m
[31m-   - justify-content属性[m
[31m-[m
[31m-     justify-content属性定义了项目在主轴上的对齐方式。[m
[31m-[m
[31m-     ```[m
[31m-     flex-start(默认值): 左对齐。[m
[31m-     flex-end: 右对齐。[m
[31m-     center: 居中。[m
[31m-     space-between: 两端对齐, 项目之间间隔相等。[m
[31m-     space-around: 每个项目两侧的间隔相等。所以,项目之间的间隔比项目与边框的间隔大一倍。[m
[31m-     ```[m
[31m-[m
[31m-   - align-items属性[m
[31m-[m
[31m-     align-items属性定义项目在侧轴上如何对齐。[m
[31m-[m
[31m-     ```[m
[31m-     flex-start(默认值): 与侧轴的起点对齐。[m
[31m-     flex-end: 与侧轴的终点对齐。[m
[31m-     center: 与侧轴的中点对齐。[m
[31m-     baseline: 项目的第一行文字的基线对齐。[m
[31m-     stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。[m
[31m-     ```[m
[31m-[m
[31m-   -  align-content 属性[m
[31m-[m
[31m-     align-content属性定义了多根轴线的对齐方式。**如果项目只有一根轴线，该属性不起作用。**[m
[31m-[m
[31m-     ```[m
[31m-     flex-start(默认值): 与交叉轴的起点对齐。[m
[31m-     flex-end: 与交叉轴的终点对齐。[m
[31m-     center: 与交叉轴的中点对齐。[m
[31m-     space-between: 与交叉轴两端对齐，轴线之间的间隔平均分布。[m
[31m-     space-around: 每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。[m
[31m-     stretch（默认值）：轴线占满整个交叉轴。[m
[31m-     ```[m
[31m-[m
[31m-   **举例：常用作考察布局**[m
[31m-[m
[31m-## 13.双栏布局 三栏布局(⭐⭐⭐)[m
[31m-[m
[31m-### 1.双栏布局[m
[31m-[m
[31m-**左侧固定右侧自适应**[m
[31m-[m
[31m-**实现原理：左侧固定宽高并浮动，右侧固定高度，宽度自适应，父节点清除浮动即可**[m
[31m-[m
[31m-```html[m
[31m-<!DOCTYPE html>[m
[31m-<html lang="en">[m
[31m-[m
[31m-<head>[m
[31m-    <meta charset="UTF-8">[m
[31m-    <meta name="viewport" content="width=device-width, initial-scale=1.0">[m
[31m-    <meta http-equiv="X-UA-Compatible" content="ie=edge">[m
[31m-    <title>左侧固定右侧自适应</title>[m
[31m-</head>[m
[31m-<style>[m
[31m-    /*方法1*/[m
[31m-    /* 1、将左侧div浮动，右侧div设置margin-left */[m
[31m-    .outer {[m
[31m-        overflow: hidden;[m
[31m-        border: 1px solid red;[m
[31m-    }[m
[31m-[m
[31m-    .sidebar {[m
[31m-        float: left;[m
[31m-        width: 200px;[m
[31m-        height: 150px;[m
[31m-        background: #BCE8F1;[m
[31m-    }[m
[31m-[m
[31m-    .content {[m
[31m-        margin-left: 200px;[m
[31m-        height: 100px;[m
[31m-        background: #F0AD4E;[m
[31m-    }[m
[31m-[m
[31m-    /*方法2*/[m
[31m-    /* 2、固定区采用绝对定位，自适应区设置margin */[m
[31m-    .outer2 {[m
[31m-        position: relative;[m
[31m-        height: 150px;[m
[31m-        border: 1px solid red;[m
[31m-    }[m
[31m-[m
[31m-    .sidebar2 {[m
[31m-        position: absolute;[m
[31m-        left: 0;[m
[31m-        top: 0;[m
[31m-        width: 200px;[m
[31m-        height: 100%;[m
[31m-        background: #BCE8F1;[m
[31m-    }[m
[31m-[m
[31m-    .content2 {[m
[31m-        margin-left: 200px;[m
[31m-        height: 100px;[m
[31m-        background: #F0AD4E;[m
[31m-    }[m
[31m-[m
[31m-    /*方法3*/[m
[31m-    /* table布局 */[m
[31m-    .outer3 {[m
[31m-        display: table;[m
[31m-        width: 100%;[m
[31m-        border: 1px solid red;[m
[31m-    }[m
[31m-[m
[31m-    .sidebar3 {[m
[31m-        display: table-cell;[m
[31m-        width: 200px;[m
[31m-        height: 150px;[m
[31m-        background: #BCE8F1;[m
[31m-    }[m
[31m-[m
[31m-    .content3 {[m
[31m-        display: table-cell;[m
[31m-        height: 100px;[m
[31m-        background: #F0AD4E;[m
[31m-    }[m
[31m-[m
[31m-    /*方法4*/[m
[31m-    /* 双float + calc()计算属性 */[m
[31m-    .outer4 {[m
[31m-        overflow: hidden;[m
[31m-        border: 1px solid red;[m
[31m-    }[m
[31m-[m
[31m-    .sidebar4 {[m
[31m-        float: left;[m
[31m-        width: 200px;[m
[31m-        height: 150px;[m
[31m-        background: #BCE8F1;[m
[31m-    }[m
[31m-[m
[31m-    .content4 {[m
[31m-        float: left;[m
[31m-        width: calc(100% - 200px);[m
[31m-        height: 100px;[m
[31m-        background: #F0AD4E;[m
[31m-    }[m
[31m-[m
[31m-    /*方法5*/[m
[31m-    /* float + BFC方法 */[m
[31m-    .outer6 {[m
[31m-        overflow: auto;[m
[31m-        border: 1px solid red;[m
[31m-    }[m
[31m-[m
[31m-    .sidebar6 {[m
[31m-        float: left;[m
[31m-        width: 200px;[m
[31m-        height: 150px;[m
[31m-        background: #BCE8F1;[m
[31m-    }[m
[31m-[m
[31m-    .content6 {[m
[31m-        overflow: auto;[m
[31m-        height: 100px;[m
[31m-        background: #F0AD4E;[m
[31m-    }[m
[31m-[m
[31m-    /*方法6*/[m
[31m-    /* flex */[m
[31m-    .outer7 {[m
[31m-        display: flex;[m
[31m-        border: 1px solid red;[m
[31m-    }[m
[31m-[m
[31m-    .sidebar7 {[m
[31m-        flex: 0 0 200px;[m
[31m-        /* width: 200px; */[m
[31m-        height: 150px;[m
[31m-        background: #BCE8F1;[m
[31m-    }[m
[31m-[m
[31m-    .content7 {[m
[31m-        flex: 1;[m
[31m-        height: 100px;[m
[31m-        background: #F0AD4E;[m
[31m-    }[m
[31m-</style>[m
[31m-[m
[31m-<body>[m
[31m-    <div class="outer6">[m
[31m-        <div class="sidebar6">固定宽度区(sideBar)</div>[m
[31m-        <div class="content6">自适应区(content)</div>[m
[31m-    </div>[m
[31m-    <div class="footer">footer</div>[m
[31m-</body>[m
[31m-[m
[31m-</html>[m
[31m-```[m
[31m-[m
[31m-### 2.三栏布局[m
[31m-[m
[31m-**左右固定宽度中间自适应**[m
[31m-[m
[31m-```html[m
[31m-<!DOCTYPE html>[m
[31m-<html lang="en">[m
[31m-<head>[m
[31m-    <meta charset="UTF-8">[m
[31m-    <meta name="viewport" content="width=device-width, initial-scale=1.0">[m
[31m-    <meta http-equiv="X-UA-Compatible" content="ie=edge">[m
[31m-    <title>三栏布局左右固定宽度中间自适应</title>[m
[31m-    <style>[m
[31m-        *{[m
[31m-            margin: 0;[m
[31m-            padding: 0;[m
[31m-        }[m
[31m-        .layout article div{[m
[31m-            min-height: 100px;[m
[31m-        }[m
[31m-    </style>[m
[31m-</head>[m
[31m-<body>[m
[31m-    <section class="layout layout1">[m
[31m-        <style>[m
[31m-            .layout1 .left{[m
[31m-                float: left;[m
[31m-                width: 300px;[m
[31m-                background-color:red;[m
[31m-            }[m
[31m-            .layout1 .right{[m
[31m-                float: right;[m
[31m-                width: 300px;[m
[31m-                background-color:blue;[m
[31m-            }[m
[31m-            .layout1 .center{[m
[31m-                margin-right: 300px;[m
[31m-                margin-left: 300px;[m
[31m-                background-color: yellow;[m
[31m-            }[m
[31m-        </style>[m
[31m-        <article class="left-right-center">[m
[31m-            <div class="left"></div>[m
[31m-            <div class="right"></div>[m
[31m-            <div class="center">[m
[31m-                <h1>浮动解决方案</h1>[m
[31m-                1、这是三栏布局中间部分[m
[31m-                1、这是三栏布局中间部分[m
[31m-                <br>缺点：需要清除浮动[m
[31m-                <br>优点：兼容性好[m
[31m-            </div>[m
[31m-        </article>[m
[31m-    </section>[m
[31m-    <section class="layout layout2">[m
[31m-        <style>[m
[31m-            .layout2 .left-center-right>div{[m
[31m-                margin-top: 20px;[m
[31m-                position: absolute;[m
[31m-            }[m
[31m-            .layout2 .left{[m
[31m-                left: 0;[m
[31m-                width: 300px;[m
[31m-                background-color: red;[m
[31m-            }[m
[31m-            .layout2 .center{[m
[31m-                left: 300px;[m
[31m-                right: 300px;[m
[31m-                background-color: yellow;[m
[31m-            }[m
[31m-            .layout2 .right{[m
[31m-                right: 0;[m
[31m-                width: 300px;[m
[31m-                background-color: blue;[m
[31m-            }[m
[31m-        </style>[m
[31m-        <article class="left-center-right">[m
[31m-            <div class="left"></div>[m
[31m-            <div class="center">[m
[31m-                <h2>绝对定位解决方案</h2>[m
[31m-                1、这是三栏布局中间部分[m
[31m-                1、这是三栏布局中间部分[m
[31m-                <br>缺点：脱离文档流[m
[31m-                <br>优点：快捷[m
[31m-            </div>[m
[31m-            <div class="right"></div>[m
[31m-        </article>[m
[31m-    </section>[m
[31m-[m
[31m-    <section class="layout layout3">[m
[31m-            <style>[m
[31m-                .layout3 .left-center-right{[m
[31m-                    display: flex;[m
[31m-                    margin-top: 200px;[m
[31m-                }[m
[31m-                .layout3 .left{[m
[31m-                    width: 300px;[m
[31m-                    background-color: red;[m
[31m-                }[m
[31m-                .layout3 .center{[m
[31m-                    flex:1;[m
[31m-                    background-color: yellow;[m
[31m-                }[m
[31m-                .layout3 .right{[m
[31m-                    width: 300px;[m
[31m-                    background-color: blue;[m
[31m-                }[m
[31m-            </style>[m
[31m-            <article class="left-center-right">[m
[31m-                <div class="left"></div>[m
[31m-                <div class="center">[m
[31m-                    <h2>flexbox解决方案</h2>[m
[31m-                    1、这是三栏布局中间部分[m
[31m-                    1、这是三栏布局中间部分[m
[31m-                    <br>完美[m
[31m-                </div>[m
[31m-                <div class="right"></div>[m
[31m-            </article>[m
[31m-        </section>[m
[31m-[m
[31m-        <section class="layout layout4">[m
[31m-                <style>[m
[31m-                    .layout4 .left-center-right{[m
[31m-                        width: 100%;[m
[31m-                        display: table;[m
[31m-                        height: 100px;[m
[31m-                        margin-top: 50px;[m
[31m-                    }[m
[31m-                    .layout4 .left-center-right>div{[m
[31m-                        display: table-cell;[m
[31m-                    }[m
[31m-                    .layout4 .left{[m
[31m-                        width: 300px;[m
[31m-                        background-color: red;[m
[31m-                    }[m
[31m-                    .layout4 .center{[m
[31m-                        background-color: yellow;[m
[31m-                    }[m
[31m-                    .layout4 .right{[m
[31m-                        width: 300px;[m
[31m-                        background-color: blue;[m
[31m-                    }[m
[31m-                </style>[m
[31m-                <article class="left-center-right">[m
[31m-                    <div class="left"></div>[m
[31m-                    <div class="center">[m
[31m-                        <h2>表格布局解决方案</h2>[m
[31m-                        1、这是三栏布局中间部分[m
[31m-                        1、这是三栏布局中间部分[m
[31m-                        <br>兼容性好[m
[31m-                        <br>缺点：高度跟着变[m
[31m-                    </div>[m
[31m-                    <div class="right"></div>[m
[31m-                </article>[m
[31m-            </section>[m
[31m-            去掉高度已知哪个不适用：[m
[31m-            flex和table能用，会自动撑开[m
[31m-</body>[m
[31m-</html>[m
[31m-```[m
[31m-[m
[31m-[m
[31m-[m
[31m-## 14.重排和重绘(⭐⭐⭐)[m
[31m-[m
[31m-### 1.重排（Relayout/Reflow）[m
[31m-[m
[31m-```[m
[31m-在弄明白什么是重排之前，我们要知道：浏览器渲染页面默认采用的是流式布局模型（Flow Based Layout），这一点很重要。[m
[31m-```[m
[31m-[m
[31m-```[m
[31m-所谓重排，实际上是根据渲染树中每个渲染对象的信息，计算出各自渲染对象的几何信息（DOM对象的位置和尺寸大小），并将其安置在界面中的正确位置。[m
[31m-```[m
[31m-[m
[31m-```[m
[31m-由于浏览器渲染界面是基于流式布局模型的，也就是某一个DOM节点信息更改了，就需要对DOM结构进行重新计算，重新布局界面，再次引发回流，只是这个结构更改程度会决定周边DOM更改范围，即全局范围和局部范围，全局范围就是从根节点html开始对整个渲染树进行重新布局，例如当我们改变了窗口尺寸或方向或者是修改了根元素的尺寸或者字体大小等；而局部布局可以是对渲染树的某部分或某一个渲染对象进行重新布局。 [m
[31m-```[m
[31m-[m
[31m-在此，总结会引起重排的操作有： [m
[31m-[m
[31m-1.页面首次渲染。[m
[31m-[m
[31m-2.浏览器窗口大小发生改变。[m
[31m-[m
[31m-3.元素尺寸或位置发生改变。[m
[31m-[m
[31m-4.元素内容变化(文字数量或图片大小等等）[m
[31m-[m
[31m-5.元素字体大小变化。[m
[31m-[m
[31m-6.添加或者删除可见的DOM元素。[m
[31m-[m
[31m-7.激活CSS伪类（例如: :hover)[m
[31m-[m
[31m-8.设置style属性。[m
[31m-[m
[31m-9.查询某些属性或调用某些方法。[m
[31m-[m
[31m-![1603958210651](assets/1603958210651.png)[m
[31m-[m
[31m-### 2.重绘[m
[31m-[m
[31m-```[m
[31m-相比重排，重绘就简单多了，所谓重绘，就是当页面中元素样式的改变并不影响它在文档流中的位置时，例如更改了字体颜色,浏览器会将新样式赋予给元素并重新绘制的过程称。[m
[31m-```[m
[31m-[m
[31m-**常见引起浏览器绘制过程的属性包含：**[m
[31m-[m
[31m-![1603958189825](assets/1603958189825.png)[m
[31m-[m
[31m-## 15.CSS选择器(⭐⭐)[m
[31m-[m
[31m-- 都有哪些[m
[31m-[m
[31m-  - 基本选择器[m
[31m-[m
[31m-    ![1603958348014](assets/1603958348014.png)[m
[31m-[m
[31m-  - 多元素的组合选择器[m
[31m-[m
[31m-    ![1603958374457](assets/1603958374457.png)[m
[31m-[m
[31m-  - 属性选择器[m
[31m-[m
[31m-    ![1603958410274](assets/1603958410274.png)[m
[31m-[m
[31m-  - 同级元素通用选择器[m
[31m-[m
[31m-    ![1603958488530](assets/1603958488530.png)[m
[31m-[m
[31m-  - CSS 3 属性选择器[m
[31m-[m
[31m-    ![1603958510720](assets/1603958510720.png)[m
[31m-[m
[31m-  - CSS 3中与用户界面有关的伪类[m
[31m-[m
[31m-    ![1603958534640](assets/1603958534640.png)[m
[31m-[m
[31m-- 各个选择器的优先级[m
[31m-[m
[31m-  选择器的优先级[m
[31m-  　　1.最高优先级是 (直接在标签中的设置样式，假设级别为1000)`<div style="color:red;"></div>`[m
[31m-  　　2.次优先级是（ID选择器 ,假设级别为100） #myDiv{color:Red;}[m
[31m-  　　3.其次优先级是（类选择器，假设级别为10） .divClass{color:Red;}[m
[31m-  　　4.最后优先级是 （标签选择器，假设级别是 1） div{color:Red;}[m
[31m-  　　5.那么后代选择器的优先级就可以计算了啊[m
[31m-  　　比如 .divClass span { color:Red;} 优先级别就是：10+1=11[m
[31m-[m
[31m-- !important属性[m
[31m-[m
[31m-  - !important可以提升CSS样式的优先级别[m
[31m-  - IE7以下不支持!important[m
[31m-[m
[31m-## 16.CSS动画(⭐⭐)[m
[31m-[m
[31m-### 1.animation属性[m
[31m-[m
[31m-![1603959242477](assets/1603959242477.png)[m
[31m-[m
[31m-- @keyframes:关键帧，与animation-name形成映射，从而达到控制动画的效果[m
[31m-[m
[31m-### 2.transition属性[m
[31m-[m
[31m-![1603959030570](assets/1603959030570.png)[m
[31m-[m
[31m--  transition-property:可以指定某一个属性进行过渡(比如width)，也可以指定所有属性都具备过渡功能(transition-property:all)，默认为all；[m
[31m-[m
[31m-- transition-duration:可以设置ms，s[m
[31m-[m
[31m-- transition-delay:规定效果开始的时间(既可以延迟，也可以提前)[m
[31m-[m
[31m--  transition-timing-function:即过渡样式：[m
[31m-  - ease(默认值)：效果逐渐变慢[m
[31m-  - linear:匀速[m
[31m-  - ease-in:加速[m
[31m-  - ease-out:减速[m
[31m-  - ease-in-out:先加速后减速[m
[31m-  - cubic-bezier:bezier曲线[m
[31m-[m
[31m-### 3.transform属性[m
[31m-[m
[31m-![1603959314200](assets/1603959314200.png)[m
[31m-[m
[31m-- translate:控制元素的位移[m
[31m-[m
[31m-- scale：控制元素的缩放(正常大小为1)，会以当前元素中心点进行缩放[m
[31m-[m
[31m-- rotate:旋转:一般元素在2d中是按照z轴进行旋转，旋转的值为角度(deg),或者弧度[m
[31m-[m
[31m-- 3D相关[m
[31m-[m
[31m-  ![1603959404328](assets/1603959404328.png)[m
[31m-[m
[31m-- translate,scale,rotate的3d写法[m
[31m-[m
[31m-  ![1603959473645](assets/1603959473645.png)[m
[31m-[m
[31m-## 17.CSS实现三角形(⭐⭐)[m
[31m-[m
[31m-### 1.原理[m
[31m-[m
[31m-```[m
[31m-三角形实现原理：宽度width为0；height为0；（1）有一条横竖边（上下左右）的设置为border-方向：长度 solid red，这个画的就是底部的直线。其他边使用border-方向：长度 solid transparent。（2）有两个横竖边（上下左右）的设置，若斜边是在三角形的右边，这时候设置top或bottom的直线，和右边的斜线。若斜边是在三角形的左边，这时候设置top或bottom的直线，和左边的斜线。[m
[31m-```[m
[31m-[m
[31m-### 2.实现[m
[31m-[m
[31m-```css[m
[31m-2.1 Triangle Up[m
[31m-#triangle-up {[m
[31m-    width: 0;[m
[31m-    height: 0;[m
[31m-    border-left: 50px solid transparent;[m
[31m-    border-right: 50px solid transparent;[m
[31m-    border-bottom: 100px solid red;[m
[31m-}[m
[31m- [m
[31m-[m
[31m-2.2 Triangle Down[m
[31m-#triangle-down {[m
[31m-    width: 0;[m
[31m-    height: 0;[m
[31m-    border-left: 50px solid transparent;[m
[31m-    border-right: 50px solid transparent;[m
[31m-    border-top: 100px solid red;[m
[31m-}[m
[31m- [m
[31m-[m
[31m-2.3 Triangle Left[m
[31m-#triangle-left {[m
[31m-    width: 0;[m
[31m-    height: 0;[m
[31m-    border-top: 50px solid transparent;[m
[31m-    border-right: 100px solid red;[m
[31m-    border-bottom: 50px solid transparent;[m
[31m-}[m
[31m- [m
[31m-[m
[31m-2.4 Triangle Right[m
[31m-#triangle-right {[m
[31m-    width: 0;[m
[31m-    height: 0;[m
[31m-    border-top: 50px solid transparent;[m
[31m-    border-left: 100px solid red;[m
[31m-    border-bottom: 50px solid transparent;[m
[31m-}[m
[31m- [m
[31m-[m
[31m-2.5 Triangle Top Left[m
[31m-#triangle-topleft {[m
[31m-    width: 0;[m
[31m-    height: 0;[m
[31m-    border-top: 100px solid red;[m
[31m-    border-right: 100px solid transparent;[m
[31m-}[m
[31m- [m
[31m-[m
[31m-2.6 Triangle Top Right[m
[31m-#triangle-topright {[m
[31m-    width: 0;[m
[31m-    height: 0;[m
[31m-    border-top: 100px solid red;[m
[31m-    border-left: 100px solid transparent;[m
[31m- [m
[31m-}[m
[31m- [m
[31m-[m
[31m-2.7 Triangle Bottom Left[m
[31m-#triangle-bottomleft {[m
[31m-    width: 0;[m
[31m-    height: 0;[m
[31m-    border-bottom: 100px solid red;[m
[31m-    border-right: 100px solid transparent;[m
[31m-}[m
[31m- [m
[31m-[m
[31m-2.8 Triangle Bottom Right[m
[31m-#triangle-bottomright {[m
[31m-    width: 0;[m
[31m-    height: 0;[m
[31m-    border-bottom: 100px solid red;[m
[31m-    border-left: 100px solid transparent;[m
[31m-}[m
[31m-```[m
[31m-[m
[31m-[m
[31m-[m
[31m-## 18.CSS Sprites(⭐⭐)[m
[31m-[m
[31m-### 1.原理[m
[31m-[m
[31m-```[m
[31m-　　CSS Sprites其实就是把网页中一些背景图片整合到一张图片文件中，再利用CSS的“background-image”，“background- repeat”，“background-position”的组合进行背景定位，background-position可以用数字能精确的定位出背景图片的位置。[m
[31m-```[m
[31m-[m
[31m-### 2.优点[m
[31m-[m
[31m-```[m
[31m-   利用CSS Sprites能很好地减少了网页的http请求，从而大大的提高了页面的性能，这也是CSS Sprites最大的优点，也是其被广泛传播和应用的主要原因；CSS Sprites能减少图片的字节，曾经比较过多次3张图片合并成1张图片的字节总是小于这3张图片的字节总和。[m
[31m-```[m
[31m-[m
[31m-### 3.缺点[m
[31m-[m
[31m-- 在图片合并的时候，你要把多张图片有序的合理的合并成一张图片，还要留好足够的空间，防止板块内不会出现不必要的背景；这些还好，最痛苦的是在宽屏，高分辨率的屏幕下的自适应页面，你的图片如果不够宽，很容易出现背景断裂；[m
[31m-- CSS Sprites在开发的时候比较麻烦，你要通过photoshop或其他工具测量计算每一个背景单元的精确位置，这是针线活，没什么难度，但是很繁琐；幸好腾讯的鬼哥用RIA开发了一个CSS Sprites 样式生成工具，虽然还有一些使用上的不灵活，但是已经比photoshop测量来的方便多了，而且样式直接生成，复制，拷贝就OK！[m
[31m-- CSS Sprites在维护的时候比较麻烦，如果页面背景有少许改动，一般就要改这张合并的图片，无需改的地方最好不要动，这样避免改动更多的css，如果在原来的地方放不下，又只能（最好）往下加图片，这样图片的字节就增加了，还要改动css。[m
[31m-- CSS Sprites非常值得学习和应用，特别是页面有一堆ico（图标）。总之很多时候大家要权衡一下利弊，再决定是不是应用CSS Sprites。[m
[31m-[m
[31m-## 19.px rem em (⭐)[m
[31m-[m
[31m-- px 实际上就是像素，用PX设置字体大小时，比较稳定和精确[m
[31m-[m
[31m-  - 特点[m
[31m-    - IE无法调整那些使用px作为单位的字体大小；[m
[31m-    - 国外的大部分网站能够调整的原因在于其使用了em或rem作为字体单位；[m
[31m-    - Firefox能够调整px和em，rem，但是有大部分的国产浏览器使用IE内核。[m
[31m-[m
[31m-- em 就是根据基准来缩放字体的大小[m
[31m-[m
[31m-  ```[m
[31m-  em 是相对长度单位。相对于当前对象内文本的字体尺寸。如当前对行内文本的字体尺寸未被人为设置，则相对于浏览器的默认字体尺寸。(引自CSS2.0手册)[m
[31m-  [m
[31m-  任意浏览器的默认字体高都是16px。所有未经调整的浏览器都符合: 1em=16px。那么12px=0.75em,10px=0.625em。为了简化font-size的换算，需要在css中的body选择器中声明Font-size=62.5%，这就使em值变为 16px*62.5%=10px, 这样12px=1.2em, 10px=1em, 也就是说只需要将你的原来的px数值除以10，然后换上em作为单位就行了。[m
[31m-  ```[m
[31m-[m
[31m-  - 特点[m
[31m-    - em的值并不是固定的[m
[31m-    - em会继承父级元素的字体大小[m
[31m-[m
[31m-- rem 相对于根元素 `<html>` ，这样就意味着，我们只需要在根元素确定一个参考值[m
[31m-[m
[31m-  - 特点[m
[31m-    - rem 相对单位，相对于根元素 `<html>` [m
[31m-    - 相对大小和绝对大小的优点于一身[m
[31m-    - 修改根元素就成比例地调整所有字体大小[m
[31m-    - 避免字体大小逐层复合的连锁反应[m
[31m-[m
[31m-## 20.伪类/伪元素(⭐)[m
[31m-[m
[31m-![1603960399035](assets/1603960399035.png)[m
[31m-[m
[31m-- 伪类[m
[31m-[m
[31m-  ```[m
[31m-  伪类用于当已有元素处于的某个状态时，为其添加对应的样式，这个状态是根据用户行为而动态变化的。比如说，当用户悬停在指定的元素时，我们可以通过:hover来描述这个元素的状态。虽然它和普通的css类相似，可以为已有的元素添加样式，但是它只有处于dom树无法描述的状态下才能为元素添加样式，所以将其称为伪类。[m
[31m-  ```[m
[31m-[m
[31m-- 伪元素[m
[31m-[m
[31m-  ```[m
[31m-  伪元素用于创建一些不在文档树中的元素，并为其添加样式。比如说，我们可以通过::before来在一个元素前增加一些文本，并为这些文本添加样式。虽然用户可以看到这些文本，但是这些文本实际上不在文档树中。[m
[31m-  ```[m
[31m-[m
[31m-- 特点[m
[31m-[m
[31m-  - 伪元素和伪类都不会出现在源文档或者文档树中[m
[31m-  - 伪类允许出现在选择器的任何位置，而一个伪元素只能跟在选择器的最后一个简单选择器后面[m
[31m-  - 伪元素名和伪类名都是大小写不敏感的[m
[31m-  - 有些伪类是互斥的，而其它的可以同时用在一个元素上。（在规则冲突的情况下，常规层叠顺序决定结果）[m
[31m-[m
[31m-## 21.获取Iframe中的节点[m
[31m-[m
[31m-```javascript[m
[31m-var input=document.getElementById('iframe1').contentWindow.document.getElementById('id_text_1');[m
[31m-```[m
[31m-[m
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/2.JavaScript.md" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/2.JavaScript.md"[m
[1mdeleted file mode 100644[m
[1mindex fd8cdd9..0000000[m
[1m--- "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/2.JavaScript.md"[m
[1m+++ /dev/null[m
[36m@@ -1,383 +0,0 @@[m
[31m-⭐          表示我没被问过，但是是重要的知识点[m
[31m-[m
[31m-⭐⭐     表示我被问过的题[m
[31m-[m
[31m-⭐⭐⭐表示我经常被问到的题[m
[31m-[m
[31m-***[m
[31m-[m
[31m-## 1.数据类型(⭐⭐⭐)[m
[31m-[m
[31m-- 基本类型[m
[31m-   - Number[m
[31m-      - 在JS中所有的数值都是Number类型，包括32位(4字节)的整数，以及64位的浮点数（小数）[m
[31m-      - NAN是一个特殊的数字，表示Not A Number[m
[31m-   - String[m
[31m-      - 表示一系列的文本字符数据[m
[31m-      - 转义字符：\n 换行；\r回车；\t  一个制表符[m
[31m-   - Boolean[m
[31m-      - 用于表示条件的结果，主要用来做逻辑判断[m
[31m-      - Boolean的值是区分大小写的[m
[31m-   - Null[m
[31m-      - 表示声明对象为赋值，Null类型的值只有一个就是null，null这个值专门用来表示这个为空的对象。[m
[31m-   - undefined[m
[31m-      - 两种情况：声明变量未赋值会输出undefined；访问对象不存在的属性，也会输出undefined。[m
[31m-      - 使用typeof检查一个undefined时，也会返回一个underfined[m
[31m-   - Symbol[m
[31m-[m
[31m-![1604059442226](assets/1604059442226.png)[m
[31m-[m
[31m-```javascript[m
[31m-//创建Symbol[m
[31m-let s = Symbol();[m
[31m-//添加参数，用于描述Symbol[m
[31m-let s1 = Symbol('我是s1');[m
[31m-[m
[31m-//应用场景[m
[31m-//1.作为对象属性名来使用[m
[31m-let s1 = Symbol('我是s1');[m
[31m-let s2 = Symbol('我是s2');[m
[31m-let obj = {[m
[31m-    name:'小明',[m
[31m-    age:18,[m
[31m-    [s1]: '111',[m
[31m-    [s2]: '222'[m
[31m-}[m
[31m-//取值[m
[31m-console.log(obj[s1]);[m
[31m-console.log(obj[s2]);[m
[31m-//定义常量[m
[31m-const COLOR_RED = Symbol("red");[m
[31m-const COLOR_YELLOW = Symbol("yellow");[m
[31m-const COLOR_BLUE = Symbol("blue");[m
[31m-```[m
[31m-[m
[31m-- 引用类型[m
[31m-[m
[31m-   - Object[m
[31m-[m
[31m-   ![1604061444094](assets/1604061444094.png)[m
[31m-[m
[31m-## 2.判断变量的类型(⭐⭐⭐)[m
[31m-[m
[31m-- typeof[m
[31m-  - typeof运算符用于判断对象的类型，但是对于一些创建的对象，它们都会返回'object'，有时我们需要判断该实例是否为某个对象的实例，那么这个时候需要用到instanceof运算符，后续记录instanceof运算符的相关用法。[m
[31m-- instanceof及原理[m
[31m-  - typeof操作符适合用来判断一个变量是否为原始类型(number,string,boolean,undefined)，但它对引用值的用处不大，我们通常不关心一个值是不是对象，而是想知道它是什么类型的对象，因此ECMAScript提供了instanceof操作符。[m
[31m-  - 调用格式[m
[31m-[m
[31m-```javascript[m
[31m-let str = new String('hello world');[m
[31m-console.log(str instanceof String); //true[m
[31m-[m
[31m-let foo = function(){}[m
[31m-console.log(foo instanceof Function); //true[m
[31m-[m
[31m-let arr = [];[m
[31m-console.log(arr instanceof Array); //true[m
[31m-```[m
[31m-[m
[31m-[m
[31m-[m
[31m-- Object.prototype.toString.call()及原理[[class]][m
[31m-  - 在JS中，可以使用Object.prototype.toString.call()来区分对象属于哪种内置类型[m
[31m-[m
[31m-```javascript[m
[31m-console.log(Object.prototype.toString.call(null)); //[object Null][m
[31m-console.log(Object.prototype.toString.call("String"));//[object String][m
[31m-console.log(Object.prototype.toString.call(10));//[object Number][m
[31m-```[m
[31m-[m
[31m-## 3.数据类型转换(⭐⭐)[m
[31m-[m
[31m-- 相等 == 和 全等 === 的区别[m
[31m-[m
[31m-  - 相等会在比较之前执行转换数值类型，全等不会在比较之前转换操作类型[m
[31m-  - 相等的转换[m
[31m-    - 如果比较的两者中有布尔值(Boolean)，会把 Boolean 先转换为对应的 Number，即 0 和 1，然后进行比较。[m
[31m-    - 如果比较的双方中有一方为 Number，一方为 String时，会把 String 通过 Number() 方法转换为数字，然后进行比较。[m
[31m-    - 如果比较的双方中有一方为 Boolean，一方为 String时，则会将空字符串""转换为 false，除此外的一切字符串转换为 true，然后进行比较。[m
[31m-    - 如果比较的双方中有一方为 Number，一方为Object时，则会调用 valueOf 方法将Object转换为数字，然后进行比较。[m
[31m-[m
[31m-- 强制转换和隐式转换[m
[31m-[m
[31m-  - 通过String（），Number（），Boolean（）函数强制转换[m
[31m-[m
[31m-  ```javascript[m
[31m-  var str=123;[m
[31m-  var str1='123';[m
[31m-  console.log(typeof str);[m
[31m-  console.log(typeof str1);[m
[31m-  console.log(typeof String(str));[m
[31m-  console.log(typeof Number(str1));[m
[31m-  ```[m
[31m-[m
[31m-[m
[31m-[m
[31m-  - 不同类型的变量比较要先转类型，叫做类型转换，类型转换也叫隐式转换。隐式转换通常发生在运算符加减乘除，等于，还有小于，大于等。[m
[31m-[m
[31m-  ```javascript[m
[31m-  console.log(10+'20') //2010[m
[31m-  [m
[31m-  console.log(10-'20')//-10 number[m
[31m-  console.log(10-'one') //NaN not a number[m
[31m-  console.log(10-'101a') //NaN[m
[31m-  console.log(10*'20') //200 number[m
[31m-  console.log('10'*'20') //200 number[m
[31m-  console.log(20/'10') //2 number[m
[31m-  console.log('20'/'10') //2 number[m
[31m-  console.log('20'/'one') //NaN[m
[31m-  ```[m
[31m-[m
[31m-- 包装类型[m
[31m-[m
[31m-  - 为了方便操作原始值，ECMAScript提供了3种特殊的引用类型:Boolean,Number,String[m
[31m-[m
[31m-[m
[31m-## 4.原型和原型链(⭐⭐⭐)[m
[31m-[m
[31m-- 继承有两种方式：接口继承和实现继承，前者只继承方法签名，后者继承实际的方法。接口继承在ECMAScript中是不可能的，因为函数没有签名，实现继承是ECMAScript这唯一支持的继承方式，而这种继承主要是通过原型链实现[m
[31m-- **原型：**在JavaScript中，每个函数都有一个prototype属性，这个属性指向函数的原型对象。每一个javascript对象(除null外)创建的时候，就会与之关联另一个对象，这个对象就是我们所说的原型，每一个对象都会从原型中“继承”属性。[m
[31m-- **原型链：**在JavaScript中万物都是对象，对象和对象之间也有关系，并不是孤立存在的。对象之间的继承关系，在JavaScript中是通过prototype对象指向父类对象，直到指向Object对象为止，这样就形成了一个原型指向的链条，专业术语称之为原型链。[m
[31m-[m
[31m-**举例：描述构造函数、实例和原型之间的关系**[m
[31m-[m
[31m-## 5.闭包(⭐⭐⭐)[m
[31m-[m
[31m-- 闭包的概念[m
[31m-  - 变量的作用域：全局变量和局部变量[m
[31m-    1）全局变量在当前全局可以到处调用，但是局部变量只能在局部调用[m
[31m-    2）函数能够分离出一个独立的作用域[m
[31m-    3）函数内部声明的变量在函数外部无法调用[m
[31m-  - 简单来说，闭包就是能够读取其他函数内部变量的函数。[m
[31m-  - 由于在javascript中，只有函数内部的子函数才能读取局部变量，所以说，闭包可以简单理解成“定义在一个函数内部的函数“。[m
[31m-  - 所以，在本质上，闭包是将函数内部和函数外部连接起来的桥梁。[m
[31m-- 闭包的特点[m
[31m-  - 函数嵌套函数[m
[31m-  - 内部函数使用外部函数的形参和变量[m
[31m-  - 被引用的形参和变量就不会被垃圾回收机制所回收[m
[31m-- 闭包的优缺点[m
[31m-  - 可以让一个变量常驻内存[m
[31m-  - 避免全局变量污染[m
[31m-  - 可以声明私有变量[m
[31m-  - 引用的变量可能发生变化[m
[31m-  - this指向问题[m
[31m-  - 内存泄露问题[m
[31m-[m
[31m-## 6.call/apply/bind(⭐⭐⭐)[m
[31m-[m
[31m-- 这三个方法都是用来改变this指向的[m
[31m-- call()方法可以传递两个参数。第一个参数是指定函数内部中this的指向（也就是函数执行时所在的作用域），第二个参数是函数调用时需要传递的参数。[m
[31m-- apply方法的作用与call方法类似，也是改变this指向（函数执行时所在的作用域），然后在指定的作用域中，调用该函数。同时也会立即执行该函数。唯一的区别就是，它接收一个数组作为函数执行时的参数。[m
[31m-- 在使用bind改变this指向时，一开始不会直接执行要改变的函数，需要通过二次调用才能执行。[m
[31m-[m
[31m-## 7.DOM事件流和事件委托(⭐⭐⭐)[m
[31m-[m
[31m-- 事件捕获[m
[31m-  - 如果点击容器后由外向里触发事件，那便叫事件捕获(addEventListener绑定事件，并将第三个参数改为true)[m
[31m-- 事件冒泡[m
[31m-  - 在一个有嵌套关系的容器组中给每个容器添加点击事件，当点击内层容器时，浏览器会由内而外触发每个容器的事件，此即为事件冒泡[m
[31m-- 事件委托及好处[m
[31m-  - 当为多个相同的节点添加事件函数时，可以找到其父节点添加事件函数，然后通过触发对象判断是否选中其子节点，如果选中，就添加相应样式；[m
[31m-  - 事件委托的好处1:事件委托技术可以避免对每个字元素添加事件监听器，减少操作DOM节点的次数，从而减少浏览器的重绘和重排，提高代码的性能。[m
[31m-  - 事件委托的好处2:使用事件委托，只有父元素与DOM存在交互，其他的操作都是在JS虚拟内存中完成的，这样就大大提高了性能。[m
[31m-[m
[31m-## 8.cookie和storage(⭐⭐⭐)[m
[31m-[m
[31m-- cookie的构成[m
[31m-[m
[31m-   - Cookie全称为会话跟踪技术[m
[31m-   - 可以设置过期时间[m
[31m-   - 最大可以存储4KB[m
[31m-   - cookie只能存储字符串，所以一般只存储一些重要信息，例如登录，购物车信息，是否点赞，视频播放进度等[m
[31m-   - 构成：[m
[31m-      - 要存储的值(NAME=VALUE)[m
[31m-      - 过期时间(Expires=DATE)[m
[31m-      - 限制访问路径(Path=PATH)[m
[31m-      - 限制访问域名(domian=localhostx)[m
[31m-      - 安全字段(secure)[m
[31m-[m
[31m-- localStorage[m
[31m-[m
[31m-   - 永久存储[m
[31m-   - 最大可以存储5MB[m
[31m-   - localStorage只能存储字符串[m
[31m-   - localStorage对象[m
[31m-      - setItem(name,value)：设置要存储的键和值[m
[31m-      - getItem(name)：获得对应的键值[m
[31m-      - removeItem(name)：手动删除存储的键值[m
[31m-[m
[31m-- sessionStorage[m
[31m-[m
[31m-   - sessionStorage 用于临时保存同一窗口(或标签页)的数据，在关闭窗口或标签页之后将会删除这些数据[m
[31m-   - 结合后台使用[m
[31m-   - 存储空间更小，过期时间更短[m
[31m-[m
[31m-   **举例：cookie的HTTPOnly**[m
[31m-[m
[31m-   - HttpOnly 最早是由微软在 IE6 中实现的，现在已成为标准 。  浏览器会禁止页面中的 JavaScript 访问带有 HttpOnly 属性的 Cookie。 目的很明显，就是为了应对 Cookie 劫持攻击。[m
[31m-[m
[31m-## 9.数组/对象常见的方法(⭐⭐)[m
[31m-[m
[31m-- Array：slice/splice/concat/filter/map/reduce[m
[31m-[m
[31m-   - slice()方法：提取数组中指定区间的元素 slice[start,end)[m
[31m-[m
[31m-   - splice()方法：实现数组的增加，删除，修改 splice(start,length,数据1,数据2......)[m
[31m-[m
[31m-      - 删除，2个参数，起始位置，删除的项数[m
[31m-      - 增加：3个参数，起始位置，0，插入的项。[m
[31m-      - 替换，任意参数，起始位置，删除的项数，插入任意数量的项数[m
[31m-[m
[31m-   - concat()方法：拷贝原数组生成新数组,合并数组 arr.concat(arr2,数据1,数据2......)[m
[31m-[m
[31m-   - filter()方法：过滤，将符合条件的元素输出[m
[31m-[m
[31m-      ![1604207633344](assets/1604207633344.png)[m
[31m-[m
[31m-   - map()方法：映射，将数组中每个值通过计算，再存入一个新的数组，原数组不变[m
[31m-[m
[31m-     ![1604207671578](assets/1604207671578.png)[m
[31m-[m
[31m-   - reduce：归并：将数组每个元素相加返回[m
[31m-[m
[31m-     ![1604207694481](assets/1604207694481.png)[m
[31m-[m
[31m-   - join()：数组转字符串方法：将传入数组中的元素，用拼接的方法，形成一个字符串[m
[31m-[m
[31m-- Object:keys/assign[m
[31m-[m
[31m-   - slice()：提取字符串片段，并在新的字符串中返回被提取的部分[m
[31m-   - split()：把字符分割成数组[m
[31m-   - indexOf()：检索字符串，返回的是字符在字符串的下标[m
[31m-   - substr()：从起始索引号提取字符串中指定书目的字符[m
[31m-   - subString()：提取字符串中两个指定索引号之间的字符[m
[31m-   - charAt()：返回在指定位置的字符[m
[31m-   - conca()：连接字符串[m
[31m-   - match()：在字符串内检索指定的值或找到一个或多个正则表达式的匹配，返回的是值而不是值的位置[m
[31m-   - replace()：替换匹配的字符串[m
[31m-   - search()：检索与字符串匹配的子串，返回的是地址[m
[31m-   - toLowerCase()：把字符串转换成小写[m
[31m-   - toUpperCase()：把字符串准换成大写[m
[31m-[m
[31m-   **举例：改变原数组的方法**[m
[31m-[m
[31m-   - splice()[m
[31m-   - push(),pop()[m
[31m-   - shift(),unshift()[m
[31m-   - fill()[m
[31m-     - array.fill(value, start, end)[m
[31m-   - sort()[m
[31m-[m
[31m-## 10.new对象时内部做了什么(⭐)[m
[31m-[m
[31m-- 创建一个空对象[m
[31m-- 把this指向创建的空对象，并且把this的constructor指向构造函数[m
[31m-- 执行构造函数[m
[31m-[m
[31m-## 11.防抖和节流(⭐)[m
[31m-[m
[31m-- 防抖[m
[31m-  - 对于短时间内连续触发的事件（上面的滚动事件），防抖的含义就是让某个时间期限（如上面的1000毫秒）内，事件处理函数只执行一次。[m
[31m-  - 很多网站都会有一个返回顶部的按钮，这个按钮只有在滚动到距离顶部一定距离时才会出现，那么编写一个监听滚动条距离的事件，但这个事件执行的频率太高了，这样就会导致浏览器性能的消耗,解决方法就是在第一次触发该事件时，不立即执行函数，而是给出一个期限值(例如200ms)，如果期限值内没有再次触发滚动事件，那就执行函数，如果再次触发滚动事件，那就重新开始计时[m
[31m-[m
[31m-- 节流[m
[31m-  - 如果短时间内大量触发同一事件，那么在函数执行一次后，该函数再指定的时间内不再工作，直至过了这段时间才能生效[m
[31m-  - 即使用户不断拖动滚动条，也能在某个时间间隔之后给出反馈呢？[m
[31m-[m
[31m-## 12.requestAnimationFrame(⭐⭐)[m
[31m-[m
[31m-- requestAnimationFrame是html5提供的专门用于请求动画的API[m
[31m-- 相比setInterval实现动画效果，requestAnimationFrame的优势[m
[31m-  - **setTimeout：**通过设定间隔时间来不断改变图像位置，达到动画效果。但是容易出现卡顿、抖动的现象；1、settimeout任务被放入异步队列，只有当主线程任务执行完后才会执行队列中的任务，因此实际执行时间总是比设定时间要晚；2、settimeout的固定时间间隔不一定与屏幕刷新时间相同，会引起丢帧。[m
[31m-  - **requestAnimationFrame**由系统决定回调函数的执行时机。60Hz的刷新频率，那么每次刷新的间隔中会执行一次回调函数，不会引起丢帧，不会卡顿[m
[31m-[m
[31m-## 13.this指向(⭐⭐)[m
[31m-[m
[31m--  默认情况下，this指向全局（window）对象，严格模式下指向undefined[m
[31m-- 使用new后this指向new创建的对象[m
[31m-- 使用call 或者apply   this指向你传入的对象（传入的对象不能为null、undefined 不然指向window）[m
[31m--  this指向 函数最后被调用位置[m
[31m-[m
[31m-## 14.作用域链(⭐)[m
[31m-[m
[31m-- 一般情况下，变量取值到 创建 这个变量 的函数的作用域中取值。但是如果在当前作用域中没有查到值，就会向上级作用域去查，直到查到全局作用域，这么一个查找过程形成的链条就叫做作用域链。[m
[31m-[m
[31m-## 15.var/let/const(⭐⭐⭐)[m
[31m-[m
[31m-- var[m
[31m-  - 没有块级作用域，但具备函数作用域[m
[31m-  - 变量声明时会被提升[m
[31m-  - 可以重复声明该变量[m
[31m-  - 可以在声明之前使用(输出的是undefined)[m
[31m-- let[m
[31m-  - 具备块级作用域[m
[31m-  - 变量声明时不会被提升[m
[31m-  - 不能在声明之前使用[m
[31m-  - 不能被重复声明[m
[31m-- const[m
[31m-  - 具备块级作用域，变量声明不会被提升，不能重复声明，不能在声明之前使用[m
[31m-  - 声明时必须初始化[m
[31m-  - 如果声明一个对象，那么可以给这个对象添加属性[m
[31m-[m
[31m-## 16.异步编程：Promise和async await(⭐⭐⭐)[m
[31m-[m
[31m-- Pormise：ES6中的promise对象, 可以**将异步操作以同步的流程表达出来，**很好地解决了**回调地狱**的问题（避免了层层嵌套的回调函数）。[m
[31m-- async_await：真正意义上去解决异步回调的问题，同步流程表达异步操作[m
[31m-  - async返回的总是Promise对象，可以用then方法进行下一步操作。[m
[31m-- 内部状态[m
[31m-  - 初始化状态（等待状态）：pending[m
[31m-  - 成功状态：fullfilled[m
[31m-  - 失败状态：rejected[m
[31m-- **Promise.all()**[m
[31m-  - promise.all()用来包装多个promise对象，并且返回所有实例的结果[m
[31m-- **Promise.race()**[m
[31m-  - 语法和all()一样，但是返回值有所不同，race根据传入的多个Promise实例，只要有一个实例resolve或者reject，就只返回该结果，其他实例不再执行。[m
[31m-[m
[31m-## 17.箭头函数(⭐⭐)[m
[31m-[m
[31m-- 箭头函数本质上是一种匿名函数，它简化了函数编写的代码[m
[31m-- 如果方法中只有一个参数，那么()可以省略，如果方法中只有一行return代码，那么{}也可以省略[m
[31m-- 箭头函数的this指向永远和箭头函数外面一层的this指向是一样的。[m
[31m-[m
[31m-## 18.JavaScript运行机制(⭐⭐⭐)[m
[31m-[m
[31m-- 单线程、解释性语言[m
[31m-[m
[31m-- 事件循环[m
[31m-[m
[31m-  - JavaScript 是一门单线程语言，异步操作都是放到事件循环队列里面，等待主执行栈来执行的，并没有专门的异步执行线程。[m
[31m-[m
[31m-- 宏任务/微任务[m
[31m-[m
[31m-  - 宏任务(macro-task)：整体代码script、setTimeOut、setInterval[m
[31m-  - 微任务(mincro-task)：promise.then、promise.nextTick(node)[m
[31m-[m
[31m-## 19.实现继承的方式(⭐⭐)[m
[31m-[m
[31m-- 对象冒充[m
[31m-- call()方法方式[m
[31m-- apply()方法方式[m
[31m-- 原型链方式[m
[31m-- 混合方法[m
[31m-  - 混合了call方式、原型链方式[m
[31m-[m
[31m-## 20.垃圾回收(⭐)[m
[31m-[m
[31m-- **标记清除法**[m
[31m-[m
[31m-  变量在定义之后会打上标记，使用之后不需要保存的变量去掉标记[m
[31m-[m
[31m-  回收机制根据是否有标记决定是否回收该变量所占内存[m
[31m-[m
[31m-- **引用计数**[m
[31m-[m
[31m-  引用计数根据变量被引用的次数，决定是否回收，[m
[31m-[m
[31m-  如果被引用次数为0，则该回收了[m
[31m-[m
[31m-- **有几种情况，不会自动回收变量**[m
[31m-[m
[31m-  1.全局变量[m
[31m-[m
[31m-  2.闭包内引用的变量[m
\ No newline at end of file[m
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/3.Vue.md" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/3.Vue.md"[m
[1mdeleted file mode 100644[m
[1mindex c4e2efe..0000000[m
[1m--- "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/3.Vue.md"[m
[1m+++ /dev/null[m
[36m@@ -1,2 +0,0 @@[m
[31m-![1603888395852](assets/1603888395852.png)[m
[31m-[m
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603888395852.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603888395852.png"[m
[1mdeleted file mode 100644[m
[1mindex 5c39d82..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603888395852.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603951625323.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603951625323.png"[m
[1mdeleted file mode 100644[m
[1mindex 3db2799..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603951625323.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603952302420.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603952302420.png"[m
[1mdeleted file mode 100644[m
[1mindex 43d20fd..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603952302420.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603954353208.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603954353208.png"[m
[1mdeleted file mode 100644[m
[1mindex 852ddb6..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603954353208.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603954412907.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603954412907.png"[m
[1mdeleted file mode 100644[m
[1mindex c5f7df1..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603954412907.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603954430118.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603954430118.png"[m
[1mdeleted file mode 100644[m
[1mindex fd0a6a6..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603954430118.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955233918.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955233918.png"[m
[1mdeleted file mode 100644[m
[1mindex 819e239..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955233918.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955248344.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955248344.png"[m
[1mdeleted file mode 100644[m
[1mindex d1b4c9c..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955248344.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955269637.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955269637.png"[m
[1mdeleted file mode 100644[m
[1mindex e052df1..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955269637.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955278377.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955278377.png"[m
[1mdeleted file mode 100644[m
[1mindex 924b66a..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955278377.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955290712.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955290712.png"[m
[1mdeleted file mode 100644[m
[1mindex 3f649a6..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955290712.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955304104.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955304104.png"[m
[1mdeleted file mode 100644[m
[1mindex 7a37793..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955304104.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955315157.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955315157.png"[m
[1mdeleted file mode 100644[m
[1mindex ed64ec9..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955315157.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955337860.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955337860.png"[m
[1mdeleted file mode 100644[m
[1mindex 648b676..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955337860.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955354747.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955354747.png"[m
[1mdeleted file mode 100644[m
[1mindex 04bebf5..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955354747.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955430060.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955430060.png"[m
[1mdeleted file mode 100644[m
[1mindex 521cdca..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955430060.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955487208.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955487208.png"[m
[1mdeleted file mode 100644[m
[1mindex 4467f56..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955487208.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955512805.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955512805.png"[m
[1mdeleted file mode 100644[m
[1mindex 38815ba..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955512805.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955548875.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955548875.png"[m
[1mdeleted file mode 100644[m
[1mindex e5e81b2..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955548875.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955580925.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955580925.png"[m
[1mdeleted file mode 100644[m
[1mindex 819621c..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955580925.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955606908.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955606908.png"[m
[1mdeleted file mode 100644[m
[1mindex 7ef5596..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955606908.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955631107.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955631107.png"[m
[1mdeleted file mode 100644[m
[1mindex dd6b8f4..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955631107.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955660197.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955660197.png"[m
[1mdeleted file mode 100644[m
[1mindex b4e455d..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603955660197.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603956168876.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603956168876.png"[m
[1mdeleted file mode 100644[m
[1mindex 3c06d98..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603956168876.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603956197334.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603956197334.png"[m
[1mdeleted file mode 100644[m
[1mindex 87a59ec..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603956197334.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958189825.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958189825.png"[m
[1mdeleted file mode 100644[m
[1mindex b6d3432..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958189825.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958210651.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958210651.png"[m
[1mdeleted file mode 100644[m
[1mindex 6445661..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958210651.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958348014.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958348014.png"[m
[1mdeleted file mode 100644[m
[1mindex 18225fd..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958348014.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958374457.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958374457.png"[m
[1mdeleted file mode 100644[m
[1mindex e282d45..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958374457.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958410274.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958410274.png"[m
[1mdeleted file mode 100644[m
[1mindex 4d5abbd..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958410274.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958488530.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958488530.png"[m
[1mdeleted file mode 100644[m
[1mindex a0fc502..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958488530.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958510720.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958510720.png"[m
[1mdeleted file mode 100644[m
[1mindex ec21aed..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958510720.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958534640.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958534640.png"[m
[1mdeleted file mode 100644[m
[1mindex d02354f..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603958534640.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603959030570.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603959030570.png"[m
[1mdeleted file mode 100644[m
[1mindex da57227..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603959030570.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603959242477.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603959242477.png"[m
[1mdeleted file mode 100644[m
[1mindex b4f4abf..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603959242477.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603959314200.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603959314200.png"[m
[1mdeleted file mode 100644[m
[1mindex 7585fb1..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603959314200.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603959404328.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603959404328.png"[m
[1mdeleted file mode 100644[m
[1mindex c4f2b72..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603959404328.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603959450901.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603959450901.png"[m
[1mdeleted file mode 100644[m
[1mindex 510092a..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603959450901.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603959473645.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603959473645.png"[m
[1mdeleted file mode 100644[m
[1mindex 510092a..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603959473645.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603960399035.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603960399035.png"[m
[1mdeleted file mode 100644[m
[1mindex 0a302cb..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603960399035.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603960415665.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603960415665.png"[m
[1mdeleted file mode 100644[m
[1mindex dc7ebde..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1603960415665.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1604059442226.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1604059442226.png"[m
[1mdeleted file mode 100644[m
[1mindex 2b0c905..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1604059442226.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1604061444094.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1604061444094.png"[m
[1mdeleted file mode 100644[m
[1mindex 78459d2..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1604061444094.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1604207633344.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1604207633344.png"[m
[1mdeleted file mode 100644[m
[1mindex ce13864..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1604207633344.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1604207671578.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1604207671578.png"[m
[1mdeleted file mode 100644[m
[1mindex 24a2c9e..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1604207671578.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1604207694481.png" "b/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1604207694481.png"[m
[1mdeleted file mode 100644[m
[1mindex b83679f..0000000[m
Binary files "a/5.\345\244\215\344\271\240/\345\244\215\344\271\240\347\254\224\350\256\260/assets/1604207694481.png" and /dev/null differ
[1mdiff --git "a/5.\345\244\215\344\271\240/\347\254\224\350\256\260/Express/day1/\346\226\207\346\241\243/1-Express\344\273\213\347\273\215\345\222\214\345\256\211\350\243\205.html" "b/5.\345\244\215\344\271\240/\347\254\224\350\256\260/Express/day1/\346\226\207\346\241\243/1-Express\344\273\213\347\273\215\345\222\214\345\256\211\350\243\205.html"[m
[1mdeleted file mode 100644[m
[1mindex b812783..0000000[m
[1m--- "a/5.\345\244\215\344\271\240/\347\254\224\350\256\260/Express/day1/\346\226\207\346\241\243/1-Express\344\273\213\347\273\215\345\222\214\345\256\211\350\243\205.html"[m
[1m+++ /dev/null[m
[36m@@ -1,311 +0,0 @@[m
[31m-<!doctype html>[m
[31m-<html>[m
[31m-<head>[m
[31m-<meta charset='UTF-8'><meta name='viewport' content='width=device-width initial-scale=1'>[m
[31m-<title>1-Express介绍和安装</title><link href='https://fonts.loli.net/css?family=Open+Sans:400italic,700italic,700,400&subset=latin,latin-ext' rel='stylesheet' type='text/css' /><style type='text/css'>html {overflow-x: initial !important;}:root { --bg-color:#ffffff; --text-color:#333333; --select-text-bg-color:#B5D6FC; --select-text-font-color:auto; --monospace:"Lucida Console",Consolas,"Courier",monospace; }[m
[31m-html { font-size: 14px; background-color: var(--bg-color); color: var(--text-color); font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; }[m
[31m-body { margin: 0px; padding: 0px; height: auto; bottom: 0px; top: 0px; left: 0px; right: 0px; font-size: 1rem; line-height: 1.42857; overflow-x: hidden; background: inherit; tab-size: 4; }[m
[31m-iframe { margin: auto; }[m
[31m-a.url { word-break: break-all; }[m
[31m-a:active, a:hover { outline: 0px; }[m
[31m-.in-text-selection, ::selection { text-shadow: none; background: var(--select-text-bg-color); color: var(--select-text-font-color); }[m
[31m-#write { margin: 0px auto; height: auto; width: inherit; word-break: normal; overflow-wrap: break-word; position: relative; white-space: normal; overflow-x: visible; padding-top: 40px; }[m
[31m-#write.first-line-indent p { text-indent: 2em; }[m
[31m-#write.first-line-indent li p, #write.first-line-indent p * { text-indent: 0px; }[m
[31m-#write.first-line-indent li { margin-left: 2em; }[m
[31m-.for-image #write { padding-left: 8px; padding-right: 8px; }[m
[31m-body.typora-export { padding-left: 30px; padding-right: 30px; }[m
[31m-.typora-export .footnote-line, .typora-export li, .typora-export p { white-space: pre-wrap; }[m
[31m-@media screen and (max-width: 500px) {[m
[31m-  body.typora-export { padding-left: 0px; padding-right: 0px; }[m
[31m-  #write { padding-left: 20px; padding-right: 20px; }[m
[31m-  .CodeMirror-sizer { margin-left: 0px !important; }[m
[31m-  .CodeMirror-gutters { display: none !important; }[m
[31m-}[m
[31m-#write li > figure:last-child { margin-bottom: 0.5rem; }[m
[31m-#write ol, #write ul { position: relative; }[m
[31m-img { max-width: 100%; vertical-align: middle; }[m
[31m-button, input, select, textarea { color: inherit; font: inherit; }[m
[31m-input[type="checkbox"], input[type="radio"] { line-height: normal; padding: 0px; }[m
[31m-*, ::after, ::before { box-sizing: border-box; }[m
[31m-#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p, #write pre { width: inherit; }[m
[31m-#write h1, #write h2, #write h3, #write h4, #write h5, #write h6, #write p { position: relative; }[m
[31m-p { line-height: inherit; }[m
[31m-h1, h2, h3, h4, h5, h6 { break-after: avoid-page; break-inside: avoid; orphans: 2; }[m
[31m-p { orphans: 4; }[m
[31m-h1 { font-size: 2rem; }[m
[31m-h2 { font-size: 1.8rem; }[m
[31m-h3 { font-size: 1.6rem; }[m
[31m-h4 { font-size: 1.4rem; }[m
[31m-h5 { font-size: 1.2rem; }[m
[31m-h6 { font-size: 1rem; }[m
[31m-.md-math-block, .md-rawblock, h1, h2, h3, h4, h5, h6, p { margin-top: 1rem; margin-bottom: 1rem; }[m
[31m-.hidden { display: none; }[m
[31m-.md-blockmeta { color: rgb(204, 204, 204); font-weight: 700; font-style: italic; }[m
[31m-a { cursor: pointer; }[m
[31m-sup.md-footnote { padding: 2px 4px; background-color: rgba(238, 238, 238, 0.7); color: rgb(85, 85, 85); border-radius: 4px; cursor: pointer; }[m
[31m-sup.md-footnote a, sup.md-footnote a:hover { color: inherit; text-transform: inherit; text-decoration: inherit; }[m
[31m-#write input[type="checkbox"] { cursor: pointer; width: inherit; height: inherit; }[m
[31m-figure { overflow-x: auto; margin: 1.2em 0px; max-width: calc(100% + 16px); padding: 0px; }[m
[31m-figure > table { margin: 0px !important; }[m
[31m-tr { break-inside: avoid; break-after: auto; }[m
[31m-thead { display: table-header-group; }[m
[31m-table { border-collapse: collapse; border-spacing: 0px; width: 100%; overflow: auto; break-inside: auto; text-align: left; }[m
[31m-table.md-table td { min-width: 32px; }[m
[31m-.CodeMirror-gutters { border-right: 0px; background-color: inherit; }[m
[31m-.CodeMirror-linenumber { user-select: none; }[m
[31m-.CodeMirror { text-align: left; }[m
[31m-.CodeMirror-placeholder { opacity: 0.3; }[m
[31m-.CodeMirror pre { padding: 0px 4px; }[m
[31m-.CodeMirror-lines { padding: 0px; }[m
[31m-div.hr:focus { cursor: none; }[m
[31m-#write pre { white-space: pre-wrap; }[m
[31m-#write.fences-no-line-wrapping pre { white-space: pre; }[m
[31m-#write pre.ty-contain-cm { white-space: normal; }[m
[31m-.CodeMirror-gutters { margin-right: 4px; }[m
[31m-.md-fences { font-size: 0.9rem; display: block; break-inside: avoid; text-align: left; overflow: visible; white-space: pre; background: inherit; position: relative !important; }[m
[31m-.md-diagram-panel { width: 100%; margin-top: 10px; text-align: center; padding-top: 0px; padding-bottom: 8px; overflow-x: auto; }[m
[31m-#write .md-fences.mock-cm { white-space: pre-wrap; }[m
[31m-.md-fences.md-fences-with-lineno { padding-left: 0px; }[m
[31m-#write.fences-no-line-wrapping .md-fences.mock-cm { white-space: pre; overflow-x: auto; }[m
[31m-.md-fences.mock-cm.md-fences-with-lineno { padding-left: 8px; }[m
[31m-.CodeMirror-line, twitterwidget { break-inside: avoid; }[m
[31m-.footnotes { opacity: 0.8; font-size: 0.9rem; margin-top: 1em; margin-bottom: 1em; }[m
[31m-.footnotes + .footnotes { margin-top: 0px; }[m
[31m-.md-reset { margin: 0px; padding: 0px; border: 0px; outline: 0px; vertical-align: top; background: 0px 0px; text-decoration: none; text-shadow: none; float: none; position: static; width: auto; height: auto; white-space: nowrap; cursor: inherit; -webkit-tap-highlight-color: transparent; line-height: normal; font-weight: 400; text-align: left; box-sizing: content-box; direction: ltr; }[m
[31m-li div { padding-top: 0px; }[m
[31m-blockquote { margin: 1rem 0px; }[m
[31m-li .mathjax-block, li p { margin: 0.5rem 0px; }[m
[31m-li { margin: 0px; position: relative; }[m
[31m-blockquote > :last-child { margin-bottom: 0px; }[m
[31m-blockquote > :first-child, li > :first-child { margin-top: 0px; }[m
[31m-.footnotes-area { color: rgb(136, 136, 136); margin-top: 0.714rem; padding-bottom: 0.143rem; white-space: normal; }[m
[31m-#write .footnote-line { white-space: pre-wrap; }[m
[31m-@media print {[m
[31m-  body, html { border: 1px solid transparent; height: 99%; break-after: avoid; break-before: avoid; }[m
[31m-  #write { margin-top: 0px; padding-top: 0px; border-color: transparent !important; }[m
[31m-  .typora-export * { -webkit-print-color-adjust: exact; }[m
[31m-  html.blink-to-pdf { font-size: 13px; }[m
[31m-  .typora-export #write { padding-left: 32px; padding-right: 32px; padding-bottom: 0px; break-after: avoid; }[m
[31m-  .typora-export #write::after { height: 0px; }[m
[31m-}[m
[31m-.footnote-line { margin-top: 0.714em; font-size: 0.7em; }[m
[31m-a img, img a { cursor: pointer; }[m
[31m-pre.md-meta-block { font-size: 0.8rem; min-height: 0.8rem; white-space: pre-wrap; background: rgb(204, 204, 204); display: block; overflow-x: hidden; }[m
[31m-p > .md-image:only-child:not(.md-img-error) img, p > img:only-child { display: block; margin: auto; }[m
[31m-p > .md-image:only-child { display: inline-block; width: 100%; }[m
[31m-#write .MathJax_Display { margin: 0.8em 0px 0px; }[m
[31m-.md-math-block { width: 100%; }[m
[31m-.md-math-block:not(:empty)::after { display: none; }[m
[31m-[contenteditable="true"]:active, [contenteditable="true"]:focus { outline: 0px; box-shadow: none; }[m
[31m-.md-task-list-item { position: relative; list-style-type: none; }[m
[31m-.task-list-item.md-task-list-item { padding-left: 0px; }[m
[31m-.md-task-list-item > input { position: absolute; top: 0px; left: 0px; margin-left: -1.2em; margin-top: calc(1em - 10px); border: none; }[m
[31m-.math { font-size: 1rem; }[m
[31m-.md-toc { min-height: 3.58rem; position: relative; font-size: 0.9rem; border-radius: 10px; }[m
[31m-.md-toc-content { position: relative; margin-left: 0px; }[m
[31m-.md-toc-content::after, .md-toc::after { display: none; }[m
[31m-.md-toc-item { display: block; color: rgb(65, 131, 196); }[m
[31m-.md-toc-item a { text-decoration: none; }[m
[31m-.md-toc-inner:hover { text-decoration: underline; }[m
[31m-.md-toc-inner { display: inline-block; cursor: pointer; }[m
[31m-.md-toc-h1 .md-toc-inner { margin-left: 0px; font-weight: 700; }[m
[31m-.md-toc-h2 .md-toc-inner { margin-left: 2em; }[m
[31m-.md-toc-h3 .md-toc-inner { margin-left: 4em; }[m
[31m-.md-toc-h4 .md-toc-inner { margin-left: 6em; }[m
[31m-.md-toc-h5 .md-toc-inner { margin-left: 8em; }[m
[31m-.md-toc-h6 .md-toc-inner { margin-left: 10em; }[m
[31m-@media screen and (max-width: 48em) {[m
[31m-  .md-toc-h3 .md-toc-inner { margin-left: 3.5em; }[m
[31m-  .md-toc-h4 .md-toc-inner { margin-left: 5em; }[m
[31m-  .md-toc-h5 .md-toc-inner { margin-left: 6.5em; }[m
[31m-  .md-toc-h6 .md-toc-inner { margin-left: 8em; }[m
[31m-}[m
[31m-a.md-toc-inner { font-size: inherit; font-style: inherit; font-weight: inherit; line-height: inherit; }[m
[31m-.footnote-line a:not(.reversefootnote) { color: inherit; }[m
[31m-.md-attr { display: none; }[m
[31m-.md-fn-count::after { content: "."; }[m
[31m-code, pre, samp, tt { font-family: var(--monospace); }[m
[31m-kbd { margin: 0px 0.1em; padding: 0.1em 0.6em; font-size: 0.8em; color: rgb(36, 39, 41); background: rgb(255, 255, 255); border: 1px solid rgb(173, 179, 185); border-radius: 3px; box-shadow: rgba(12, 13, 14, 0.2) 0px 1px 0px, rgb(255, 255, 255) 0px 0px 0px 2px inset; white-space: nowrap; vertical-align: middle; }[m
[31m-.md-comment { color: rgb(162, 127, 3); opacity: 0.8; font-family: var(--monospace); }[m
[31m-code { text-align: left; vertical-align: initial; }[m
[31m-a.md-print-anchor { white-space: pre !important; border-width: initial !important; border-style: none !important; border-color: initial !important; display: inline-block !important; position: absolute !important; width: 1px !important; right: 0px !important; outline: 0px !important; background: 0px 0px !important; text-decoration: initial !important; text-shadow: initial !important; }[m
[31m-.md-inline-math .MathJax_SVG .noError { display: none !important; }[m
[31m-.html-for-mac .inline-math-svg .MathJax_SVG { vertical-align: 0.2px; }[m
[31m-.md-math-block .MathJax_SVG_Display { text-align: center; margin: 0px; position: relative; text-indent: 0px; max-width: none; max-height: none; min-height: 0px; min-width: 100%; width: auto; overflow-y: hidden; display: block !important; }[m
[31m-.MathJax_SVG_Display, .md-inline-math .MathJax_SVG_Display { width: auto; margin: inherit; display: inline-block !important; }[m
[31m-.MathJax_SVG .MJX-monospace { font-family: var(--monospace); }[m
[31m-.MathJax_SVG .MJX-sans-serif { font-family: sans-serif; }[m
[31m-.MathJax_SVG { display: inline; font-style: normal; font-weight: 400; line-height: normal; zoom: 90%; text-indent: 0px; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0px; min-height: 0px; border: 0px; padding: 0px; margin: 0px; }[m
[31m-.MathJax_SVG * { transition: none 0s ease 0s; }[m
[31m-.MathJax_SVG_Display svg { vertical-align: middle !important; margin-bottom: 0px !important; margin-top: 0px !important; }[m
[31m-.os-windows.monocolor-emoji .md-emoji { font-family: "Segoe UI Symbol", sans-serif; }[m
[31m-.md-diagram-panel > svg { max-width: 100%; }[m
[31m-[lang="mermaid"] svg, [lang="flow"] svg { max-width: 100%; height: auto; }[m
[31m-[lang="mermaid"] .node text { font-size: 1rem; }[m
[31m-table tr th { border-bottom: 0px; }[m
[31m-video { max-width: 100%; display: block; margin: 0px auto; }[m
[31m-iframe { max-width: 100%; width: 100%; border: none; }[m
[31m-.highlight td, .highlight tr { border: 0px; }[m
[31m-[m
[31m-[m
[31m-.CodeMirror { height: auto; }[m
[31m-.CodeMirror.cm-s-inner { background: inherit; }[m
[31m-.CodeMirror-scroll { overflow: auto hidden; z-index: 3; }[m
[31m-.CodeMirror-gutter-filler, .CodeMirror-scrollbar-filler { background-color: rgb(255, 255, 255); }[m
[31m-.CodeMirror-gutters { border-right: 1px solid rgb(221, 221, 221); background: inherit; white-space: nowrap; }[m
[31m-.CodeMirror-linenumber { padding: 0px 3px 0px 5px; text-align: right; color: rgb(153, 153, 153); }[m
[31m-.cm-s-inner .cm-keyword { color: rgb(119, 0, 136); }[m
[31m-.cm-s-inner .cm-atom, .cm-s-inner.cm-atom { color: rgb(34, 17, 153); }[m
[31m-.cm-s-inner .cm-number { color: rgb(17, 102, 68); }[m
[31m-.cm-s-inner .cm-def { color: rgb(0, 0, 255); }[m
[31m-.cm-s-inner .cm-variable { color: rgb(0, 0, 0); }[m
[31m-.cm-s-inner .cm-variable-2 { color: rgb(0, 85, 170); }[m
[31m-.cm-s-inner .cm-variable-3 { color: rgb(0, 136, 85); }[m
[31m-.cm-s-inner .cm-string { color: rgb(170, 17, 17); }[m
[31m-.cm-s-inner .cm-property { color: rgb(0, 0, 0); }[m
[31m-.cm-s-inner .cm-operator { color: rgb(152, 26, 26); }[m
[31m-.cm-s-inner .cm-comment, .cm-s-inner.cm-comment { color: rgb(170, 85, 0); }[m
[31m-.cm-s-inner .cm-string-2 { color: rgb(255, 85, 0); }[m
[31m-.cm-s-inner .cm-meta { color: rgb(85, 85, 85); }[m
[31m-.cm-s-inner .cm-qualifier { color: rgb(85, 85, 85); }[m
[31m-.cm-s-inner .cm-builtin { color: rgb(51, 0, 170); }[m
[31m-.cm-s-inner .cm-bracket { color: rgb(153, 153, 119); }[m
[31m-.cm-s-inner .cm-tag { color: rgb(17, 119, 0); }[m
[31m-.cm-s-inner .cm-attribute { color: rgb(0, 0, 204); }[m
[31m-.cm-s-inner .cm-header, .cm-s-inner.cm-header { color: rgb(0, 0, 255); }[m
[31m-.cm-s-inner .cm-quote, .cm-s-inner.cm-quote { color: rgb(0, 153, 0); }[m
[31m-.cm-s-inner .cm-hr, .cm-s-inner.cm-hr { color: rgb(153, 153, 153); }[m
[31m-.cm-s-inner .cm-link, .cm-s-inner.cm-link { color: rgb(0, 0, 204); }[m
[31m-.cm-negative { color: rgb(221, 68, 68); }[m
[31m-.cm-positive { color: rgb(34, 153, 34); }[m
[31m-.cm-header, .cm-strong { font-weight: 700; }[m
[31m-.cm-del { text-decoration: line-through; }[m
[31m-.cm-em { font-style: italic; }[m
[31m-.cm-link { text-decoration: underline; }[m
[31m-.cm-error { color: red; }[m
[31m-.cm-invalidchar { color: red; }[m
[31m-.cm-constant { color: rgb(38, 139, 210); }[m
[31m-.cm-defined { color: rgb(181, 137, 0); }[m
[31m-div.CodeMirror span.CodeMirror-matchingbracket { color: rgb(0, 255, 0); }[m
[31m-div.CodeMirror span.CodeMirror-nonmatchingbracket { color: rgb(255, 34, 34); }[m
[31m-.cm-s-inner .CodeMirror-activeline-background { background: inherit; }[m
[31m-.CodeMirror { position: relative; overflow: hidden; }[m
[31m-.CodeMirror-scroll { height: 100%; outline: 0px; position: relative; box-sizing: content-box; background: inherit; }[m
[31m-.CodeMirror-sizer { position: relative; }[m
[31m-.CodeMirror-gutter-filler, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-filler, .CodeMirror-vscrollbar { position: absolute; z-index: 6; display: none; }[m
[31m-.CodeMirror-vscrollbar { right: 0px; top: 0px; overflow: hidden; }[m
[31m-.CodeMirror-hscrollbar { bottom: 0px; left: 0px; overflow: hidden; }[m
[31m-.CodeMirror-scrollbar-filler { right: 0px; bottom: 0px; }[m
[31m-.CodeMirror-gutter-filler { left: 0px; bottom: 0px; }[m
[31m-.CodeMirror-gutters { position: absolute; left: 0px; top: 0px; padding-bottom: 30px; z-index: 3; }[m
[31m-.CodeMirror-gutter { white-space: normal; height: 100%; box-sizing: content-box; padding-bottom: 30px; margin-bottom: -32px; display: inline-block; }[m
[31m-.CodeMirror-gutter-wrapper { position: absolute; z-index: 4; background: 0px 0px !important; border: none !important; }[m
[31m-.CodeMirror-gutter-background { position: absolute; top: 0px; bottom: 0px; z-index: 4; }[m
[31m-.CodeMirror-gutter-elt { position: absolute; cursor: default; z-index: 4; }[m
[31m-.CodeMirror-lines { cursor: text; }[m
[31m-.CodeMirror pre { border-radius: 0px; border-width: 0px; background: 0px 0px; font-family: inherit; font-size: inherit; margin: 0px; white-space: pre; overflow-wrap: normal; color: inherit; z-index: 2; position: relative; overflow: visible; }[m
[31m-.CodeMirror-wrap pre { overflow-wrap: break-word; white-space: pre-wrap; word-break: normal; }[m
[31m-.CodeMirror-code pre { border-right: 30px solid transparent; width: fit-content; }[m
[31m-.CodeMirror-wrap .CodeMirror-code pre { border-right: none; width: auto; }[m
[31m-.CodeMirror-linebackground { position: absolute; left: 0px; right: 0px; top: 0px; bottom: 0px; z-index: 0; }[m
[31m-.CodeMirror-linewidget { position: relative; z-index: 2; overflow: auto; }[m
[31m-.CodeMirror-wrap .CodeMirror-scroll { overflow-x: hidden; }[m
[31m-.CodeMirror-measure { position: absolute; width: 100%; height: 0px; overflow: hidden; visibility: hidden; }[m
[31m-.CodeMirror-measure pre { position: static; }[m
[31m-.CodeMirror div.CodeMirror-cursor { position: absolute; visibility: hidden; border-right: none; width: 0px; }[m
[31m-.CodeMirror div.CodeMirror-cursor { visibility: hidden; }[m
[31m-.CodeMirror-focused div.CodeMirror-cursor { visibility: inherit; }[m
[31m-.cm-searching { background: rgba(255, 255, 0, 0.4); }[m
[31m-@media print {[m
[31m-  .CodeMirror div.CodeMirror-cursor { visibility: hidden; }[m
[31m-}[m
[31m-[m
[31m-[m
[31m-:root { --side-bar-bg-color: #fafafa; --control-text-color: #777; }[m
[31m-html { font-size: 16px; }[m
[31m-body { font-family: "Open Sans", "Clear Sans", "Helvetica Neue", Helvetica, Arial, sans-serif; color: rgb(51, 51, 51); line-height: 1.6; }[m
[31m-#write { max-width: 860px; margin: 0px auto; padding: 30px 30px 100px; }[m
[31m-#write > ul:first-child, #write > ol:first-child { margin-top: 30px; }[m
[31m-a { color: rgb(65, 131, 196); }[m
[31m-h1, h2, h3, h4, h5, h6 { position: relative; margin-top: 1rem; margin-bottom: 1rem; font-weight: bold; line-height: 1.4; cursor: text; }[m
[31m-h1:hover a.anchor, h2:hover a.anchor, h3:hover a.anchor, h4:hover a.anchor, h5:hover a.anchor, h6:hover a.anchor { text-decoration: none; }[m
[31m-h1 tt, h1 code { font-size: inherit; }[m
[31m-h2 tt, h2 code { font-size: inherit; }[m
[31m-h3 tt, h3 code { font-size: inherit; }[m
[31m-h4 tt, h4 code { font-size: inherit; }[m
[31m-h5 tt, h5 code { font-size: inherit; }[m
[31m-h6 tt, h6 code { font-size: inherit; }[m
[31m-h1 { padding-bottom: 0.3em; font-size: 2.25em; line-height: 1.2; border-bottom: 1px solid rgb(238, 238, 238); }[m
[31m-h2 { padding-bottom: 0.3em; font-size: 1.75em; line-height: 1.225; border-bottom: 1px solid rgb(238, 238, 238); }[m
[31m-h3 { font-size: 1.5em; line-height: 1.43; }[m
[31m-h4 { font-size: 1.25em; }[m
[31m-h5 { font-size: 1em; }[m
[31m-h6 { font-size: 1em; color: rgb(119, 119, 119); }[m
[31m-p, blockquote, ul, ol, dl, table { margin: 0.8em 0px; }[m
[31m-li > ol, li > ul { margin: 0px; }[m
[31m-hr { height: 2px; padding: 0px; margin: 16px 0px; background-color: rgb(231, 231, 231); border: 0px none; overflow: hidden; box-sizing: content-box; }[m
[31m-li p.first { display: inline-block; }[m
[31m-ul, ol { padding-left: 30px; }[m
[31m-ul:first-child, ol:first-child { margin-top: 0px; }[m
[31m-ul:last-child, ol:last-child { margin-bottom: 0p